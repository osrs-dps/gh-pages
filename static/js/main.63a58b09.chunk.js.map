{"version":3,"sources":["data/boosts.js","components/PlayerStats.js","lib/constants.js","lib/calc.js","components/ResultsPanel.js","components/MonsterPanel.js","slot_data.js","components/GearSelector.js","App.js","lib/custom_hooks.js","serviceWorker.js","index.js"],"names":["STR_PRAYERS","id","multiplier","label","STR_POTIONS","base","ATT_PRAYERS","ATT_POTIONS","RANGED_PRAYERS","str","acc","RANGED_POTIONS","MAGIC_PRAYERS","MAGIC_POTIONS","IdSelect","data","value","options","onChange","rest","map","boost","_","find","selected","StatRow","title","stats","onStatChange","statKey","potions","prayers","Row","Col","className","lg","InputGroup","Prepend","Text","Form","Control","type","e","parseInt","target","isClearable","placeholder","PlayerStats","BOOSTS","SLOT_NAMES","DEFENCE_STYLE_MAP","Stab","Slash","Crush","Magic","Ranged","ATTACK_STYLE_MAP","STRENGTH_STYLE_MAP","TRIDENTS_BASE_DAMAGE","TRIDENTS","keys","potionBuff","level","potion","Math","floor","equipTotal","equips","field","reduce","total","key","calc","monster","attackStyle","dps","maxHit","totalAttBonus","effectiveAtt","maxAttRoll","maxDefenceRoll","hitChance","totalStrBonus","effectiveStr","baseDamage","rangedPotion","rangedPotionId","rangedPrayer","rangedPrayerId","rangedPotionBonus","ranged","styleAttBonus","Accurate","style","attPotionBonus","defence_level","ranged_def","weapon","attack_speed","magicPotion","magicPotionId","magicPrayer","magicPrayerId","magicPotionBonus","magic","visibleMagicLevel","weaponName","name","includes","min","Longrange","magic_level","magic_def","styleStrBonus","Aggressive","Controlled","strPotion","strengthPotionId","strPrayer","strengthPrayerId","strPotionBonus","strength","attStyleType","attPotion","attackPotionId","attPrayer","attackPrayerId","attack","defStyleType","ResultsPanel","calculations","calculateResults","round","row","stat","toFixed","MonsterPanel","val","isNil","ammo","head","cape","amulet","chest","legs","shield","gloves","boots","ring","slotOptions","slot","ret","i","length","parseJSONSelector","slotData","renderSlotSelector","onEquipChange","styleType","attBonusField","strBonusField","src","alt","isDisabled","two_handed","itemId","setEquips","remove","availableAttackStyles","allAttackStyles","attack_style_id","styles","getAttackStylesFromWeapon","item","changeset","Button","variant","onClick","without","DEFAULT_MONSTER","location","exp_bonus","combat_level","hitpoints","attack_level","strength_level","ranged_level","attack_style","stab_attack","slash_attack","crush_attack","magic_attack","ranged_attack","attack_bonus","melee_strength","ranged_strength","stab_def","slash_def","crush_def","interval","DEFAULT_STATS","defence","prayer","monsterOptions","monsterData","DEFAULT_EQUIPS","App","defaultSingleValue","useState","values","setValues","index","filter","newValue","useArrayState","equipSets","addEquipSet","removeEquipSet","editEquipSet","setStats","setMonster","monsterId","onMonsterChange","htmlFor","equipSet","GearSelector","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.63a58b09.chunk.js","sourcesContent":["\nexport default {\n    STR_PRAYERS: [\n        { id: 1, multiplier: 1.23, label: 'Piety' },\n        { id: 2, multiplier: 1.18, label: 'Chivalry' },\n        { id: 3, multiplier: 1.15, label: 'Ultimate Strength (15%)' },\n        { id: 4, multiplier: 1.10, label: 'Superhuman Strength (10%)' },\n        { id: 5, multiplier: 1.05, label: 'Burst of Strength (5%)' },\n    ],\n\n    STR_POTIONS: [\n        { id: 1, base: 6, multiplier: 0.16, label: 'Overload (+)' },\n        { id: 2, base: 5, multiplier: 0.15, label: 'Super Strength' },\n        { id: 3, base: 3, multiplier: 0.1, label: 'Strength' },\n    ],\n\n    ATT_PRAYERS: [\n        { id: 1, multiplier: 1.20, label: 'Piety' },\n        { id: 2, multiplier: 1.15, label: 'Chivalry' },\n        { id: 3, multiplier: 1.15, label: 'Incredible Reflexes (15%)' },\n        { id: 4, multiplier: 1.10, label: 'Improved Reflexes (10%)' },\n        { id: 5, multiplier: 1.05, label: 'Clarity of Thought (5%)' },\n    ],\n\n    ATT_POTIONS: [\n        { id: 1, base: 6, multiplier: 0.16, label: 'Overload (+)' },\n        { id: 2, base: 5, multiplier: 0.15, label: 'Super Attack' },\n        { id: 3, base: 3, multiplier: 0.1, label: 'Attack' },\n    ],\n\n    RANGED_PRAYERS: [\n        { id: 1, label: 'Rigour', str: 1.23, acc: 1.20 },\n        { id: 2, label: 'Eagle Eye (15%)', str: 1.15, acc: 1.15 },\n        { id: 3, label: 'Hawk Eye (10%)', str: 1.10, acc: 1.10 },\n        { id: 4, label: 'Sharp Eye (5%)', str: 1.05, acc: 1.05 },\n    ],\n\n    RANGED_POTIONS: [\n        { id: 1, base: 6, multiplier: 0.16, label: 'Overload (+)' },\n        { id: 2, base: 5, multiplier: 0.15, label: 'Super Ranging' },\n        { id: 2, base: 4, multiplier: 0.1, label: 'Ranging' },\n    ],\n\n    MAGIC_PRAYERS: [\n        { id: 1, multiplier: 1.25, label: 'Augury' },\n        { id: 2, multiplier: 1.15, label: 'Mystic Might (15%)' },\n        { id: 3, multiplier: 1.10, label: 'Mystic Lore (10%)' },\n        { id: 4, multiplier: 1.05, label: 'Mystic Will (5%)' },\n    ],\n\n    MAGIC_POTIONS: [\n        { id: 1, base: 6, multiplier: 0.16, label: 'Overload (+)' },\n        { id: 2, base: 5, multiplier: 0.15, label: 'Super Magic' },\n        { id: 3, base: 4, multiplier: 0, label: 'Magic' },\n        { id: 4, base: 1, multiplier: 0.1, label: 'Imbued Heart' },\n    ],\n\n};\n","import React from 'react';\nimport {Row, Col, Form, InputGroup} from 'react-bootstrap';\nimport Select from 'react-select';\nimport BOOSTS from '../data/boosts';\nimport _ from 'lodash';\n\nconst boostOptions = data => data.map(boost => ({value: boost.id, label: boost.label}));\n\nfunction IdSelect({value, options, onChange, ...rest}) {\n    return (\n        <Select\n            options={boostOptions(options)}\n            value={value && _.find(options, {id: value})}\n            onChange={selected => onChange(selected?.value)}\n            {...rest}\n        />\n    );\n}\n\nfunction StatRow({ title, stats, onStatChange, statKey, potions, prayers }) {\n    return (\n        <Row>\n            <Col className='noPadding' lg='2'>\n                <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>{title}</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control\n                        type='number'\n                        className='stat-input'\n                        value={stats[statKey]}\n                        onChange={e => onStatChange(parseInt(e.target.value), statKey)}\n                    />\n                </InputGroup>\n            </Col>\n            <Col lg='3'><IdSelect\n                isClearable\n                placeholder={`${title} Potion`}\n                options={potions}\n                onChange={id => onStatChange(id, `${statKey}PotionId`)}\n            /></Col>\n            <Col lg='3'><IdSelect\n                isClearable\n                placeholder={`${title} Prayer`}\n                options={prayers}\n                onChange={id => onStatChange(id, `${statKey}PrayerId`)}\n            /></Col>\n        </Row>\n    );\n}\n\nfunction PlayerStats({stats, onStatChange}) {\n    return (\n        <div>\n            <StatRow\n                title='Attack'\n                statKey='attack'\n                potions={BOOSTS.ATT_POTIONS}\n                prayers={BOOSTS.ATT_PRAYERS}\n                stats={stats}\n                onStatChange={onStatChange}\n            />\n            <StatRow\n                title='Strength'\n                statKey='strength'\n                potions={BOOSTS.STR_POTIONS}\n                prayers={BOOSTS.STR_PRAYERS}\n                stats={stats}\n                onStatChange={onStatChange}\n            />\n            <StatRow\n                title='Magic'\n                statKey='magic'\n                potions={BOOSTS.MAGIC_POTIONS}\n                prayers={BOOSTS.MAGIC_PRAYERS}\n                stats={stats}\n                onStatChange={onStatChange}\n            />\n            <StatRow\n                title='Ranged'\n                statKey='ranged'\n                potions={BOOSTS.RANGED_POTIONS}\n                prayers={BOOSTS.RANGED_PRAYERS}\n                stats={stats}\n                onStatChange={onStatChange}\n            />\n        </div>\n    );\n\n}\n\nexport default PlayerStats;\n","export const SLOT_NAMES = [\n    'weapon',\n    'shield',\n    'ammo',\n    'head',\n    'cape',\n    'amulet',\n    'chest',\n    'legs',\n    'gloves',\n    'boots',\n    'ring',\n];\n\nexport const DEFENCE_STYLE_MAP = {\n    Stab: 'stab_def',\n    Slash: 'slash_def',\n    Crush: 'crush_def',\n    Magic: 'magic_def',\n    Ranged: 'range_def'\n};\n\nexport const ATTACK_STYLE_MAP = {\n    Stab: 'stab_att',\n    Slash: 'slash_att',\n    Crush: 'crush_att',\n    Magic: 'magic_att',\n    Ranged: 'range_att'\n};\n\nexport const STRENGTH_STYLE_MAP = {\n    Stab: 'str',\n    Slash: 'str',\n    Crush: 'str',\n    Magic: 'magic_str',\n    Ranged: 'range_str'\n};\n","import {\n    SLOT_NAMES,\n    DEFENCE_STYLE_MAP,\n    ATTACK_STYLE_MAP,\n} from './constants';\nimport BOOSTS from '../data/boosts';\nimport _ from 'lodash';\n\nconst TRIDENTS_BASE_DAMAGE = {\n    'Trident of the seas': 20,\n    'Trident of the swamp': 23,\n    'Sanguinesti staff': 24,\n};\nconst TRIDENTS = _.keys(TRIDENTS_BASE_DAMAGE);\n\nfunction potionBuff(level, potion) {\n    return potion.base + Math.floor(level * potion.multiplier);\n}\n\nfunction equipTotal(equips, field) {\n    return _.reduce(SLOT_NAMES, (total, key) => {\n        return total + (equips[key] ? parseInt(equips[key][field]) : 0);\n    }, 0);\n}\n\n// https://web.archive.org/web/20190905124128/http://webcache.googleusercontent.com/search?q=cache:http://services.runescape.com/m=forum/forums.ws?317,318,712,65587452\n\nfunction calc(stats, equips, monster) {\n    if(!equips.attackStyle) {\n        return {\n            dps: 'N/A',\n            maxHit: 'N/A',\n            totalAttBonus: 'N/A',\n            effectiveAtt: 'N/A',\n            maxAttRoll: 'N/A',\n            maxDefenceRoll: 'N/A',\n            hitChance: 'N/A',\n            totalStrBonus: 'N/A',\n            effectiveStr: 'N/A',\n            baseDamage: 'N/A',\n        };\n    }\n\n    if(equips.attackStyle?.value?.type === 'Ranged'){\n\n        const totalStrBonus = equipTotal(equips, 'range_str');\n\n        const rangedPotion = _.find(BOOSTS.RANGED_POTIONS, { id: stats.rangedPotionId }) || { base: 0, multiplier: 0 };\n        const rangedPrayer = _.find(BOOSTS.RANGED_PRAYERS, { id: stats.rangedPrayerId }) || { acc: 1, str: 1 };\n        const rangedPotionBonus = potionBuff(stats.ranged, rangedPotion);\n\n        const effectiveStr = Math.floor(((stats.ranged + rangedPotionBonus) * rangedPrayer.str * 1));\n        const baseDamage = Math.floor( 1.3 + (effectiveStr/10) + (totalStrBonus/80) + ((effectiveStr*totalStrBonus)/640) );\n\n        const specialBonus = 1;\n        const maxHit = baseDamage * specialBonus;\n\n        // ########## Attack Calcs ##########\n        const styleAttBonus = {Accurate: 3}[equips.attackStyle?.value?.style] || 0;\n\n        const totalAttBonus = _.reduce(SLOT_NAMES, (total, key) => {\n            return total + (equips[key]? parseInt(equips[key]['range_att']) : 0);\n        }, 0);\n\n        const attPotionBonus = potionBuff(stats.ranged, rangedPotion);\n\n        const effectiveAtt = Math.floor(((stats.ranged + attPotionBonus) * rangedPrayer.acc * 1) + styleAttBonus + 8);\n        // todo: attack style, void, slayer helm, void\n\n        const maxAttRoll = effectiveAtt * (totalAttBonus + 64) * 1;\n        // salve, slayer, arclight, dchb, dhl, wildy weapons, tbow\n\n        // ########## Enemy Defence Calcs ##########\n\n        const effectiveDefence = monster.defence_level + 9;\n        const monsterDefStyle = monster.ranged_def;\n        const maxDefenceRoll = effectiveDefence * (monsterDefStyle + 64);\n\n        // ########## DPS ##########\n\n        let hitChance;\n\n        if(maxAttRoll > maxDefenceRoll) {\n            hitChance = 1 - (maxDefenceRoll + 2) / (2 * (maxAttRoll + 1));\n        } else {\n            hitChance = maxAttRoll / (2 * (maxDefenceRoll + 1));\n        }\n\n        // \"attack speed\" is (10 - weapon_tick_interval)\n        // for example, whip = 4 tick interval, so the attack speed is (10-4) = 6\n        const attackSpeed = (equips.attackStyle?.value?.style === 'Rapid') ? equips.weapon?.attack_speed + 1 || 6 :equips.weapon?.attack_speed || 6;\n        const tickInterval = 10 - attackSpeed;\n        const timeBetweenAttacks = tickInterval * 0.6;\n        const dps = hitChance * (maxHit / 2) / timeBetweenAttacks;\n\n        return {\n            dps,\n            maxHit,\n            totalAttBonus,\n            effectiveAtt,\n            maxAttRoll,\n            maxDefenceRoll,\n            hitChance,\n            totalStrBonus,\n            effectiveStr,\n            baseDamage,\n        };\n    }\n    else if(equips.attackStyle?.value?.type === 'Magic'){\n        const totalStrBonus = equipTotal(equips, 'magic_str');\n\n        const magicPotion = _.find(BOOSTS.MAGIC_POTIONS, { id: stats.magicPotionId }) || { base: 0, multiplier: 0 };\n        const magicPrayer = _.find(BOOSTS.MAGIC_PRAYERS, { id: stats.magicPrayerId }) || { multiplier: 1 };\n        const magicPotionBonus = potionBuff(stats.magic, magicPotion);\n        const visibleMagicLevel = stats.magic + magicPotionBonus;\n\n        // ########## Strength Calcs ##########\n        let baseDamage = 0;\n        const weaponName = equips.weapon?.name;\n        if (_.includes(TRIDENTS, weaponName)) {\n            // tridents max hit scales only scales to 108 magic\n            baseDamage = TRIDENTS_BASE_DAMAGE[weaponName] + ((Math.min(visibleMagicLevel, 108) - 75) / 3);\n        } else {\n            // other spells here\n        }\n        const maxHit = (1 + totalStrBonus) * baseDamage;\n\n        // ########## Attack Calcs ##########\n        const styleAttBonus = { Accurate: 3, Longrange: 1 }[equips.attackStyle?.value?.style] || 0;\n\n        const totalAttBonus = equipTotal(equips, 'magic_att');\n\n        const effectiveAtt = Math.floor((visibleMagicLevel * magicPrayer.multiplier * 1) + styleAttBonus + 8);\n\n        const maxAttRoll = effectiveAtt * (totalAttBonus + 64) * 1;\n\n        // ########## Enemy Defence Calcs ##########\n        const effectiveDefence = monster.magic_level + 9; // npc defence is 100% magic level\n        const monsterDefStyle = monster.magic_def;\n        const maxDefenceRoll = effectiveDefence * (monsterDefStyle + 64);\n        // ########## DPS ##########\n\n        let hitChance;\n\n        if (maxAttRoll > maxDefenceRoll) {\n            hitChance = 1 - (maxDefenceRoll + 2) / (2 * (maxAttRoll + 1));\n        } else {\n            hitChance = maxAttRoll / (2 * (maxDefenceRoll + 1));\n        }\n\n        // \"attack speed\" is (10 - weapon_tick_interval)\n        // for example, whip = 4 tick interval, so the attack speed is (10-4) = 6\n        const attackSpeed = equips.weapon?.attack_speed || 6;\n        const tickInterval = 10 - attackSpeed;\n        const timeBetweenAttacks = tickInterval * 0.6;\n        const dps = hitChance * (maxHit / 2) / timeBetweenAttacks;\n\n        return {\n            dps,\n            maxHit,\n            totalAttBonus,\n            effectiveAtt,\n            maxAttRoll,\n            maxDefenceRoll,\n            hitChance,\n            totalStrBonus,\n            effectiveStr: 'N/A',\n            baseDamage,\n        };\n    }\n    else{\n        // ########## Strength Calcs ##########\n\n        const styleStrBonus = {Aggressive: 3, Controlled: 1}[equips.attackStyle?.value?.style] || 0;\n        const strPotion = _.find(BOOSTS.STR_POTIONS, {id: stats.strengthPotionId}) || {base: 0, multiplier: 0};\n        const strPrayer = _.find(BOOSTS.STR_PRAYERS, {id: stats.strengthPrayerId}) || {multiplier: 1};\n\n        const totalStrBonus = equipTotal(equips, 'str');\n\n        // https://oldschool.runescape.wiki/w/Maximum_melee_hit\n\n        const strPotionBonus = potionBuff(stats.strength, strPotion);\n\n        const effectiveStr = Math.floor(((stats.strength + strPotionBonus) * strPrayer.multiplier * 1) + styleStrBonus);\n        // Effective Strength = ((Strength Level + Potion Bonus) * Prayer Bonus * Other Bonus) + Style Bonus\n        // todo: attack style, void, slayer helm, void\n\n        const baseDamage = Math.floor( 1.3 + (effectiveStr/10) + (totalStrBonus/80) + ((effectiveStr*totalStrBonus)/640) );\n\n        const specialBonus = 1;\n        const maxHit = baseDamage * specialBonus;\n        // todo: dharoks, obsidian, special attack bonuses\n\n        // ########## Attack Calcs ##########\n        const attStyleType = ATTACK_STYLE_MAP[equips.attackStyle?.value?.type];\n        const styleAttBonus = {Accurate: 3, Controlled: 1}[equips.attackStyle?.value?.style] || 0;\n        const attPotion = _.find(BOOSTS.ATT_POTIONS, {id: stats.attackPotionId}) || {base: 0, multiplier: 0};\n        const attPrayer = _.find(BOOSTS.ATT_PRAYERS, {id: stats.attackPrayerId}) || {multiplier: 1};\n\n        const totalAttBonus = _.reduce(SLOT_NAMES, (total, key) => {\n            return total + ((equips[key] && attStyleType)? parseInt(equips[key][attStyleType]) : 0);\n        }, 0);\n\n        const attPotionBonus = potionBuff(stats.attack, attPotion);\n\n        const effectiveAtt = Math.floor(((stats.attack + attPotionBonus) * attPrayer.multiplier * 1) + styleAttBonus + 8);\n        // todo: attack style, void, slayer helm, void\n\n        const maxAttRoll = effectiveAtt * (totalAttBonus + 64) * 1;\n        // salve, slayer, arclight, dchb, dhl, wildy weapons, tbow\n\n        // ########## Enemy Defence Calcs ##########\n        const defStyleType = DEFENCE_STYLE_MAP[equips.attackStyle?.value?.type];\n        const effectiveDefence = monster.defence_level + 9;\n        const monsterDefStyle = defStyleType ? monster[defStyleType] : 0;\n        const maxDefenceRoll = effectiveDefence * (monsterDefStyle + 64);\n\n        // ########## DPS ##########\n\n        let hitChance;\n\n        if(maxAttRoll > maxDefenceRoll) {\n            hitChance = 1 - (maxDefenceRoll + 2) / (2 * (maxAttRoll + 1));\n        } else {\n            hitChance = maxAttRoll / (2 * (maxDefenceRoll + 1));\n        }\n\n        // \"attack speed\" is (10 - weapon_tick_interval)\n        // for example, whip = 4 tick interval, so the attack speed is (10-4) = 6\n        const attackSpeed = equips.weapon?.attack_speed || 6;\n        const tickInterval = 10 - attackSpeed;\n        const timeBetweenAttacks = tickInterval * 0.6;\n        const dps = hitChance * (maxHit / 2) / timeBetweenAttacks;\n\n        return {\n            dps,\n            maxHit,\n            totalAttBonus,\n            effectiveAtt,\n            maxAttRoll,\n            maxDefenceRoll,\n            hitChance,\n            totalStrBonus,\n            effectiveStr,\n            baseDamage,\n        };\n    }\n}\n\nexport default calc;\n","import React from 'react';\nimport calculateResults from '../lib/calc';\n\nfunction ResultsPanel({stats, equips, monster}) {\n\n    const calculations = calculateResults(stats, equips, monster);\n\n    const rows = [\n        {label: 'Damage Per Second', field: 'dps', round: true},\n        {label: 'Max hit', field: 'maxHit'},\n        {label: 'Attack Bonus', field: 'totalAttBonus'},\n        {label: 'Effective Attack', field: 'effectiveAtt'},\n        {label: 'Max Attack Roll', field: 'maxAttRoll'},\n        {label: 'Max Defence Roll', field: 'maxDefenceRoll'},\n        {label: 'Accuracy', field: 'hitChance', round: true},\n        {label: 'Strength bonus', field: 'totalStrBonus'},\n        {label: 'Effective Strength', field: 'effectiveStr'},\n        {label: 'Base Damage', field: 'baseDamage'},\n    ];\n\n    return (\n        <div className='stats'>\n            {rows.map(row => {\n                let stat = calculations[row.field];\n                if(row.round && stat.toFixed) {\n                    stat = stat.toFixed(6);\n                }\n                return (\n                    <div key={row.label}>\n                        <div className='stat-left'>{row.label}</div>\n                        <div className='stat-right'>{stat}</div>\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\n\nexport default ResultsPanel;\n","import React from 'react';\nimport _ from 'lodash';\n\nfunction MonsterPanel({monster}) {\n    const monsterStatsIWannaShow = [\n        'combat_level',\n        'hitpoints',\n        'defence_level',\n        'magic_level',\n        'stab_def',\n        'slash_def',\n        'crush_def',\n        'magic_def',\n        'ranged_def',\n    ];\n\n    return (\n        <div className='stats'>\n            {monsterStatsIWannaShow.map(field => {\n                const val = monster[field];\n                return (\n                    <div key={field}>\n                        <div className='stat-left'>{field}</div>\n                        <div className='stat-right'>{(_.isNil(val) || val === '') ? 'N/A' : val}</div>\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\n\nexport default MonsterPanel;\n","import weaponSlot from './data/weapon_slot.json';\nimport ammoSlot from './data/ammo_blessing.json';\nimport headSlot from './data/head_slot.json';\nimport capeSlot from './data/cape_slot.json';\nimport amuletSlot from './data/neck_slot.json';\nimport chestSlot from './data/chest_slot.json';\nimport legsSlot from './data/leg_slot.json';\nimport shieldSlot from './data/shield_slot.json';\nimport glovesSlot from './data/hand_slot.json';\nimport bootsSlot from './data/boot_slot.json';\nimport ringSlot from './data/ring_slot.json';\n\nexport default {\n    weapon: weaponSlot,\n    ammo: ammoSlot,\n    head: headSlot,\n    cape: capeSlot,\n    amulet: amuletSlot,\n    chest: chestSlot,\n    legs: legsSlot,\n    shield: shieldSlot,\n    gloves: glovesSlot,\n    boots: bootsSlot,\n    ring: ringSlot,\n};","import React from 'react';\nimport _ from 'lodash';\nimport slotData from '../slot_data';\nimport Select from 'react-select';\nimport allAttackStyles from '../data/attack_styles.json';\nimport { Button } from 'react-bootstrap';\n\nimport {\n  SLOT_NAMES,\n  ATTACK_STYLE_MAP,\n  STRENGTH_STYLE_MAP,\n} from '../lib/constants';\n\nfunction getAttackStylesFromWeapon(weapon) {\n  if (!weapon) {\n    return [];\n  }\n  return _.find(allAttackStyles, { id: weapon.attack_style_id })?.styles || [];\n}\n\nfunction parseJSONSelector(slot) {\n  var ret = [];\n  for (var i = 0; i < slot.length; i++) {\n    ret[i] = { value: slot[i].name, label: slot[i].name };\n  }\n  return ret;\n}\n\nconst slotOptions = _.reduce(SLOT_NAMES, (acc, key) => {\n  return { ...acc, [key]: parseJSONSelector(slotData[key]) };\n}, {});\n\nfunction renderSlotSelector(type, equips, onEquipChange) {\n  const styleType = equips.attackStyle?.value?.type;\n  const attBonusField = ATTACK_STYLE_MAP[styleType];\n  const strBonusField = STRENGTH_STYLE_MAP[styleType];\n\n  return (\n    <div key={type} className='equipment-row'>\n      <img src={`/images/${type}_slot.png`} alt={`${type} slot`} />\n      <Select\n        isClearable\n        isDisabled={type === 'shield' && equips.weapon?.two_handed}\n        className='equipment-slot'\n        placeholder={`Select ${type}...`}\n        options={slotOptions[type]}\n        value={equips[type] && { value: equips[type].name, label: equips[type].name }}\n        onChange={itemId => onEquipChange(itemId, type)}\n      />\n      {styleType && <span>{'        '}str: {equips[type] && equips[type][strBonusField]} - att: {equips[type] && equips[type][attBonusField]}</span>}\n    </div>\n  );\n}\n\nexport default function ({ equips, setEquips, remove }) {\n  const availableAttackStyles = getAttackStylesFromWeapon(equips.weapon);\n\n  const onEquipChange = (selected, type) => {\n    let item = null;\n    if (selected) {\n      item = _.find(slotData[type], { name: selected.value });\n    }\n    const changeset = { ...equips, [type]: item };\n\n    if (type === 'weapon') {\n      if (item?.two_handed) {\n        changeset.shield = null;\n      }\n      if (equips.weapon?.attack_style_id !== item?.attack_style_id) {\n        changeset.attackStyle = null;\n      }\n    }\n    setEquips(changeset);\n  };\n\n  return (\n    <div>\n      <Button variant='danger' onClick={remove}>remove this card</Button>\n      {renderSlotSelector('weapon', equips, onEquipChange)}\n      <div className='equipment-row'>\n        <img src='/images/attack_styles.png' alt='attack style' />\n        <Select\n          isClearable\n          className='equipment-slot'\n          placeholder={'Select attack style...'}\n          options={availableAttackStyles}\n          value={equips.attackStyle}\n          onChange={style => setEquips({ ...equips, attackStyle: style })}\n        />\n      </div>\n      {_.without(SLOT_NAMES, 'weapon').map(type => renderSlotSelector(type, equips, onEquipChange))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport monsterData from './data/monsters.json';\nimport _ from 'lodash';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Select from 'react-select';\nimport PlayerStats from './components/PlayerStats';\nimport ResultsPanel from './components/ResultsPanel';\nimport MonsterPanel from './components/MonsterPanel';\nimport GearSelector from './components/GearSelector';\nimport { useArrayState } from './lib/custom_hooks';\nimport { Button } from 'react-bootstrap';\n\nimport { SLOT_NAMES } from './lib/constants';\n\nconst DEFAULT_MONSTER = {\n    name: null,\n    location: null,\n    exp_bonus: null,\n    combat_level: 0,\n    hitpoints: 0,\n    attack_level: 0,\n    defence_level: 0,\n    strength_level: 0,\n    magic_level: 0,\n    ranged_level: 0,\n    attack_style: null,\n    attack_speed: 0,\n    stab_attack: 0,\n    slash_attack: 0,\n    crush_attack: 0,\n    magic_attack: 0,\n    ranged_attack: 0,\n    attack_bonus: 0,\n    melee_strength: 0,\n    ranged_strength: 0,\n    stab_def: 0,\n    slash_def: 0,\n    crush_def: 0,\n    magic_def: 0,\n    ranged_def: 0,\n    interval: null,\n    type: null\n};\n\nconst DEFAULT_STATS = {\n    attack: 99,\n    strength: 99,\n    defence: 99,\n    magic: 99,\n    ranged: 99,\n    hitpoints: 99,\n    prayer: 99,\n\n    attackPrayerId: null,\n    attackPotionId: null,\n    strengthPrayerId: null,\n    strengthPotionId: null,\n    rangedPrayerId: null,\n    rangedPotionId: null,\n};\n\nconst monsterOptions = parseJSONSelector(monsterData);\n\nfunction parseJSONSelector(slot){\n    var ret = [];\n    for(var i = 0 ; i < slot.length ; i++){\n        ret[i] = {value: slot[i].name, label: slot[i].name};\n    }\n    return ret;\n}\n\nconst DEFAULT_EQUIPS = _.reduce(SLOT_NAMES, (acc, key) => {\n    return {...acc, [key]: null};\n}, {});\n\nDEFAULT_EQUIPS.attackStyle = null;\n\nfunction App() {\n\n    const [equipSets, addEquipSet, removeEquipSet, editEquipSet] = useArrayState(DEFAULT_EQUIPS);\n    const [stats, setStats] = useState(DEFAULT_STATS);\n    const [monster, setMonster] = useState(DEFAULT_MONSTER);\n\n    const onMonsterChange = (monsterId) => {\n        let monster = DEFAULT_MONSTER;\n        if(monsterId) {\n            monster = _.find(monsterData, {name: monsterId.value});\n        }\n        setMonster(monster);\n    };\n\n    const onStatChange = (value, type) => {\n        setStats({...stats, [type]: value});\n    };\n\n    return (\n\n        <div className='App'>\n            <div className='row'>\n                <div className='col-md-6'>\n                    <Select\n                        isClearable\n                        placeholder='Select Enemy...'\n                        options={monsterOptions}\n                        value={monsterOptions && monsterOptions.name}\n                        onChange={monsterId => onMonsterChange(monsterId)}\n                    />\n                    <MonsterPanel monster={monster} />\n                </div>\n                <div className='col-md-6'>\n                    <PlayerStats stats={stats} onStatChange={onStatChange} />\n                    <div className='checkbox-wrapper'>\n                        <div className=''>\n                            <label className='checkbox-label' htmlFor='wild'>Wilderness</label>\n                            <input className='checkbox' type='checkbox' id='wild'></input>\n                        </div>\n                        <div className=''>\n                            <label className='checkbox-label' htmlFor='kandarin'>Kandarin</label>\n                            <input className='checkbox' type='checkbox' id='kandarin'></input>\n                        </div>\n                        <div className=''>\n                            <label className='checkbox-label' htmlFor='dwh'>Dragon warhammer</label>\n                            <input className='checkbox' type='checkbox' id='dwh'></input>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className='row'>\n                <Button onClick={addEquipSet}>Add gear card</Button>\n            </div>\n            <div className='row'>\n                {equipSets.map((equipSet, index) => (\n                    <div className='gear-card' key={index}>\n                        <GearSelector\n                            equips={equipSet}\n                            setEquips={equips => editEquipSet(index, equips)}\n                            remove={() => removeEquipSet(index)} />\n                        <ResultsPanel equips={equipSet} stats={stats} monster={monster} />\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { useState } from 'react';\n\nexport function useArrayState(defaultSingleValue) {\n    const [values, setValues] = useState([]);\n\n    const addValue = (value = defaultSingleValue) => setValues([...values, value]);\n\n    const removeValue = index => setValues(values.filter((_, i) => index !== i));\n\n    const editValue = (index, newValue) => {\n        values[index] = newValue;\n        setValues([...values]);\n    };\n\n    return [values, addValue, removeValue, editValue];\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}