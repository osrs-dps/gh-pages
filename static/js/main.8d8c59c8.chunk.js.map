{"version":3,"sources":["slot_data.js","data/boosts.js","components/PlayerStats.js","lib/constants.js","lib/calc.js","components/ResultsPanel.js","App.js","serviceWorker.js","index.js"],"names":["weapon","ammo","head","cape","amulet","chest","legs","shield","gloves","boots","ring","STR_PRAYERS","id","multiplier","label","STR_POTIONS","base","ATT_PRAYERS","ATT_POTIONS","RANGED_PRAYERS","str","acc","RANGED_POTIONS","IdSelect","data","value","options","onChange","rest","map","boost","_","find","selected","PlayerStats","stats","onStatChange","className","Container","Row","Col","lg","InputGroup","Prepend","Text","Form","Control","type","class","attack","e","parseInt","target","isClearable","placeholder","BOOSTS","strength","magic","ranged","SLOT_NAMES","DEFENCE_STYLE_MAP","Stab","Slash","Crush","Magic","Ranged","ATTACK_STYLE_MAP","potionBuff","level","potion","Math","floor","calc","equips","monster","hitChance","styleStrBonus","Aggressive","Controlled","attackStyle","style","strPotion","strengthPotionId","strPrayer","strengthPrayerId","totalStrBonus","reduce","total","key","strPotionBonus","effectiveStr","baseDamage","maxHit","attStyleType","styleAttBonus","Accurate","attPotion","attackPotionId","attPrayer","attackPrayerId","totalAttBonus","attPotionBonus","effectiveAtt","maxAttRoll","defStyleType","maxDefenceRoll","defence_level","dps","attack_speed","ResultsPanel","calculations","calculateResults","parseFloat","toFixed","slotOptions","parseJSONSelector","slotData","DEFAULT_MONSTER","name","location","exp_bonus","combat_level","hitpoints","attack_level","strength_level","magic_level","ranged_level","attack_style","stab_attack","slash_attack","crush_attack","magic_attack","ranged_attack","attack_bonus","melee_strength","ranged_strength","stab_def","slash_def","crush_def","magic_def","ranged_def","interval","DEFAULT_STATS","defence","prayer","rangedPrayerId","rangedPotionId","monsterOptions","monsterData","slot","ret","i","length","DEFAULT_EQUIPS","App","useState","setEquips","setStats","setMonster","availableAttackStyles","allAttackStyles","attack_style_id","styles","isDisabled","two_handed","itemId","item","clearShield","onEquipChange","monsterId","onMonsterChange","htmlFor","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8d8c59c8.chunk.js","sourcesContent":["import weaponSlot from './data/weapon_slot.json';\nimport ammoSlot from './data/ammo_blessing.json';\nimport headSlot from './data/head_slot.json';\nimport capeSlot from './data/cape_slot.json';\nimport amuletSlot from './data/neck_slot.json';\nimport chestSlot from './data/chest_slot.json';\nimport legsSlot from './data/leg_slot.json';\nimport shieldSlot from './data/shield_slot.json';\nimport glovesSlot from './data/hand_slot.json';\nimport bootsSlot from './data/boot_slot.json';\nimport ringSlot from './data/ring_slot.json';\n\nexport default {\n    weapon: weaponSlot,\n    ammo: ammoSlot,\n    head: headSlot,\n    cape: capeSlot,\n    amulet: amuletSlot,\n    chest: chestSlot,\n    legs: legsSlot,\n    shield: shieldSlot,\n    gloves: glovesSlot,\n    boots: bootsSlot,\n    ring: ringSlot,\n};","\nexport default {\n    STR_PRAYERS: [\n        {id: 1, multiplier: 1.23, label: \"Piety\"},\n        {id: 2, multiplier: 1.18, label: \"Chivalry\"},\n        {id: 3, multiplier: 1.15, label: \"Ultimate Strength\"},\n    ],\n\n    STR_POTIONS: [\n        {id: 1, base: 6, multiplier: 0.16, label: \"Overload (+)\"},\n        {id: 2, base: 5, multiplier: 0.15, label: \"Super Strength Potion\"},\n        {id: 3, base: 3, multiplier: 0.1, label: \"Strength Potion\"},\n    ],\n\n    ATT_PRAYERS: [\n        {id: 1, multiplier: 1.20, label: \"Piety\"},\n        {id: 2, multiplier: 1.15, label: \"Chivalry\"},\n        {id: 3, multiplier: 1.15, label: \"Incredible Reflexes\"},\n    ],\n\n    ATT_POTIONS: [\n        {id: 1, base: 6, multiplier: 0.16, label: \"Overload (+)\"},\n        {id: 2, base: 5, multiplier: 0.15, label: \"Super Attack Potion\"},\n        {id: 3, base: 3, multiplier: 0.1, label: \"Attack Potion\"},\n    ],\n\n    RANGED_PRAYERS: [\n        { id: 1, label: \"Rigour\", str: 1.23, acc: 1.20 },\n        { id: 2, label: \"Eagle Eye\", str: 1.15, acc: 1.15 },\n    ],\n\n    RANGED_POTIONS: [\n        {id: 1, label: \"Ranging Potion\"},\n        {id: 2, label: \"Overload (+)\"},\n    ],\n};\n","import React from 'react';\nimport {Container, Row, Col, Form, InputGroup} from 'react-bootstrap';\nimport Select from 'react-select';\nimport BOOSTS from '../data/boosts';\nimport _ from 'lodash';\n\nconst boostOptions = data => data.map(boost => ({value: boost.id, label: boost.label}));\n\nfunction IdSelect({value, options, onChange, ...rest}) {\n    return (\n        <Select\n            options={boostOptions(options)}\n            value={value && _.find(options, {id: value})}\n            onChange={selected => onChange(selected?.id)}\n            {...rest}\n        />\n    );\n}\n\nfunction PlayerStats({stats, onStatChange}) {\n    return (\n        <div className=\"stats-wrapper\">\n            <div className=\"margin-tb\">\n                <Container>\n                    <Row>\n                        <Col className=\"noPadding\" lg=\"2\">\n                            <InputGroup>\n                                <InputGroup.Prepend>\n                                    <InputGroup.Text id=\"basic-addon3\">\n                                        Attack\n                                    </InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <Form.Control\n                                    type=\"number\"\n                                    class=\"stat-input\"\n                                    id=\"attack\"\n                                    value={stats.attack}\n                                    onChange={e => onStatChange(parseInt(e.target.value), 'attack')}\n                                />\n                            </InputGroup>\n                        </Col>\n                        <Col lg=\"3\"><IdSelect\n                            isClearable\n                            placeholder='Attack Potion'\n                            options={BOOSTS.ATT_POTIONS}\n                            onChange={id => onStatChange(id, 'attackPotionId')}\n                        /></Col>\n                        <Col lg=\"3\"><IdSelect\n                            isClearable\n                            placeholder='Attack Prayer'\n                            options={BOOSTS.ATT_PRAYERS}\n                            onChange={id => onStatChange(id, 'attackPrayerId')}\n                        /></Col>\n                    </Row>\n                </Container>\n            </div>\n            <div className=\"margin-tb\">\n                <Container>\n                    <Row>\n                        <Col className=\"noPadding\" lg=\"2\">\n                            <InputGroup>\n                                <InputGroup.Prepend>\n                                    <InputGroup.Text id=\"basic-addon3\">\n                                        Strength\n                                    </InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <Form.Control className=\"stat-input\"\n                                    type=\"number\"\n                                    id=\"str\"\n                                    value={stats.strength}\n                                    onChange={e => onStatChange(parseInt(e.target.value), 'strength')}\n                                />\n                            </InputGroup>\n                        </Col>\n                        <Col lg=\"3\"><IdSelect\n                            isClearable\n                            placeholder='Strength Potion'\n                            options={BOOSTS.STR_POTIONS}\n                            onChange={id => onStatChange(id, 'strengthPotionId')}\n                        /></Col>\n                        <Col lg=\"3\"><IdSelect\n                            isClearable\n                            placeholder='Strength Prayer'\n                            options={BOOSTS.STR_PRAYERS}\n                            onChange={id => onStatChange(id, 'strengthPrayerId')}\n                        /></Col>\n                    </Row>\n                </Container>\n            </div>\n            <div className=\"margin-tb\">\n                <Container>\n                    <Row>\n                        <Col className=\"noPadding\" lg=\"2\">\n                            <InputGroup>\n                                <InputGroup.Prepend>\n                                    <InputGroup.Text id=\"basic-addon3\">\n                                        Magic\n                                    </InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <Form.Control\n                                    className=\"stat-input\"\n                                    type=\"number\"\n                                    id=\"magic\"\n                                    value={stats.magic}\n                                    onChange={e => onStatChange(parseInt(e.target.value), 'magic')}\n                                />\n                            </InputGroup>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n            <div className=\"margin-tb\">\n                <Container>\n                    <Row>\n                        <Col className=\"noPadding\" lg=\"2\">\n                            <InputGroup>\n                                <InputGroup.Prepend>\n                                    <InputGroup.Text id=\"basic-addon3\">\n                                        Ranged\n                                    </InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <Form.Control\n                                    className=\"stat-input\"\n                                    type=\"number\"\n                                    id=\"ranged\"\n                                    value={stats.ranged}\n                                    onChange={e => onStatChange(parseInt(e.target.value), 'ranged')}\n                                />\n                            </InputGroup>\n                        </Col>\n                        <Col lg=\"3\"><IdSelect\n                            isClearable\n                            options={BOOSTS.RANGED_POTIONS}\n                            placeholder='Ranged Potion'\n                            onChange={id => onStatChange(id, 'rangedPotionId')}\n                        /></Col>\n                        <Col lg=\"3\"><IdSelect\n                            isClearable\n                            options={BOOSTS.RANGED_PRAYERS}\n                            placeholder='Ranged Prayer'\n                            onChange={id => onStatChange(id, 'rangedPrayerId')}\n                        /></Col>\n                    </Row>\n                </Container>\n            </div>\n        </div>\n    );\n\n}\n\n\n\n\n\n\n\n\n\n\nexport default PlayerStats;\n","export const SLOT_NAMES = [\n    'weapon',\n    'shield',\n    'ammo',\n    'head',\n    'cape',\n    'amulet',\n    'chest',\n    'legs',\n    'gloves',\n    'boots',\n    'ring',\n];\n\nexport const DEFENCE_STYLE_MAP = {\n    Stab: \"stab_def\",\n    Slash: \"slash_def\",\n    Crush: \"crush_def\",\n    Magic: \"magic_def\",\n    Ranged: \"range_def\"\n};\n\nexport const ATTACK_STYLE_MAP = {\n    Stab: \"stab_att\",\n    Slash: \"slash_att\",\n    Crush: \"crush_att\",\n    Magic: \"magic_att\",\n    Ranged: \"range_att\"\n};\n","import {\n    SLOT_NAMES,\n    DEFENCE_STYLE_MAP,\n    ATTACK_STYLE_MAP,\n} from './constants';\nimport BOOSTS from '../data/boosts';\nimport _ from 'lodash';\n\nfunction potionBuff(level, potion) {\n    return potion.base + Math.floor(level * potion.multiplier);\n}\n\nfunction calc(stats, equips, monster) {\n    // ########## Strength Calcs ##########\n\n    const styleStrBonus = {Aggressive: 3, Controlled: 1}[equips.attackStyle?.value?.style] || 0;\n    const strPotion = _.find(BOOSTS.STR_POTIONS, {id: stats.strengthPotionId}) || {base: 0, multiplier: 0};\n    const strPrayer = _.find(BOOSTS.STR_PRAYERS, {id: stats.strengthPrayerId}) || {multiplier: 1};\n\n    const totalStrBonus = _.reduce(SLOT_NAMES, (total, key) => {\n        return total + (equips[key] ? parseInt(equips[key].str) : 0);\n    }, 0);\n\n    // https://oldschool.runescape.wiki/w/Maximum_melee_hit\n\n    const strPotionBonus = potionBuff(stats.strength, strPotion);\n\n    const effectiveStr = Math.floor(((stats.strength + strPotionBonus) * strPrayer.multiplier * 1) + styleStrBonus);\n    // Effective Strength = ((Strength Level + Potion Bonus) * Prayer Bonus * Other Bonus) + Style Bonus\n    // todo: attack style, void, slayer helm, void\n\n    const baseDamage = Math.floor( 1.3 + (effectiveStr/10) + (totalStrBonus/80) + ((effectiveStr*totalStrBonus)/640) );\n\n    const specialBonus = 1;\n    const maxHit = baseDamage * specialBonus;\n    // todo: dharoks, obsidian, special attack bonuses\n\n\n\n\n\n\n    // ########## Attack Calcs ##########\n    const attStyleType = ATTACK_STYLE_MAP[equips.attackStyle?.value?.type];\n    const styleAttBonus = {Accurate: 3, Controlled: 1}[equips.attackStyle?.value?.style] || 0;\n    const attPotion = _.find(BOOSTS.ATT_POTIONS, {id: stats.attackPotionId}) || {base: 0, multiplier: 0};\n    const attPrayer = _.find(BOOSTS.ATT_PRAYERS, {id: stats.attackPrayerId}) || {multiplier: 1};\n\n    const totalAttBonus = _.reduce(SLOT_NAMES, (total, key) => {\n        return total + ((equips[key] && attStyleType)? parseInt(equips[key][attStyleType]) : 0);\n    }, 0);\n\n    const attPotionBonus = potionBuff(stats.attack, attPotion);\n\n    const effectiveAtt = Math.floor(((stats.attack + attPotionBonus) * attPrayer.multiplier * 1) + styleAttBonus + 8);\n    // todo: attack style, void, slayer helm, void\n\n    const maxAttRoll = effectiveAtt * (totalAttBonus + 64) * 1;\n    // salve, slayer, arclight, dchb, dhl, wildy weapons, tbow\n\n\n\n\n\n    // ########## Enemy Defence Calcs ##########\n    const defStyleType = DEFENCE_STYLE_MAP[equips.attackStyle?.value?.type];\n    const effectiveDefence = monster.defence_level + 9;\n    const monsterDefStyle = defStyleType ? monster[defStyleType] : 0;\n    const maxDefenceRoll = effectiveDefence * (monsterDefStyle + 64);\n\n    // ########## DPS ##########\n\n    let hitChance;\n\n    if(maxAttRoll > maxDefenceRoll) {\n        hitChance = 1 - (maxDefenceRoll + 2) / (2 * (maxAttRoll + 1));\n    } else {\n        hitChance = maxAttRoll / (2 * (maxDefenceRoll + 1));\n    }\n\n    // \"attack speed\" is (10 - weapon_tick_interval)\n    // for example, whip = 4 tick interval, so the attack speed is (10-4) = 6\n    const attackSpeed = equips.weapon?.attack_speed || 6\n    const tickInterval = 10 - attackSpeed;\n    const timeBetweenAttacks = tickInterval * 0.6;\n    const dps = hitChance * (maxHit / 2) / timeBetweenAttacks;\n\n    return {\n        dps,\n        maxHit,\n        totalAttBonus,\n        effectiveAtt,\n        maxAttRoll,\n        maxDefenceRoll,\n        hitChance,\n        totalStrBonus,\n        effectiveStr,\n        baseDamage,\n    };\n}\n\nexport default calc;\n","import React from 'react';\nimport calculateResults from '../lib/calc';\n\nfunction ResultsPanel({stats, equips, monster}) {\n\n    const calculations = calculateResults(stats, equips, monster);\n\n    return (\n        <div className=\"stats\">\n            <div>\n                <div className=\"stat-left\">\n                    Damage Per Second\n                </div>\n                <div className=\"stat-right\">\n                    {parseFloat(calculations.dps.toFixed(6))}\n                </div>\n            </div>\n            <div>\n                <div className=\"stat-left\">\n                    Max hit\n                </div>\n                <div className=\"stat-right\">\n                    {calculations.maxHit}\n                </div>\n            </div>\n            <div>\n                <div className=\"stat-left\">\n                    Attack Bonus\n                </div>\n                <div className=\"stat-right\">\n                    {calculations.totalAttBonus}\n                </div>\n            </div>\n            <div>\n                <div className=\"stat-left\">\n                    Effective Attack\n                </div>\n                <div className=\"stat-right\">\n                    {calculations.effectiveAtt}\n                </div>\n            </div>\n            <div>\n                <div className=\"stat-left\">\n                    Max Attack Roll\n                </div>\n                <div className=\"stat-right\">\n                    {calculations.maxAttRoll}\n                </div>\n            </div>\n            <div>\n                <div className=\"stat-left\">\n                    Max Defence Roll\n                </div>\n                <div className=\"stat-right\">\n                    {calculations.maxDefenceRoll}\n                </div>\n            </div>\n            <div>\n                <div className=\"stat-left\">\n                    Accuracy\n                </div>\n                <div className=\"stat-right\">\n                    {parseFloat(calculations.hitChance.toFixed(6))}\n                </div>\n            </div>\n            <div>\n                <div className=\"stat-left\">\n                    Strength bonus\n                </div>\n                <div className=\"stat-right\">\n                    {calculations.totalStrBonus}\n                </div>\n            </div>\n            <div>\n                <div className=\"stat-left\">\n                    Effective Strength\n                </div>\n                <div className=\"stat-right\">\n                    {calculations.effectiveStr}\n                </div>\n            </div>\n            <div>\n                <div className=\"stat-left\">\n                    Base Damage\n                </div>\n                <div className=\"stat-right\">\n                    {calculations.baseDamage}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ResultsPanel;\n","import React, { useState } from 'react';\nimport './App.css';\nimport slotData from './slot_data';\nimport monsterData from './data/monsters.json';\nimport allAttackStyles from \"./data/attack_styles.json\";\nimport _ from 'lodash';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Select from 'react-select';\nimport PlayerStats from './components/PlayerStats';\nimport ResultsPanel from './components/ResultsPanel';\n\nimport {SLOT_NAMES} from './lib/constants';\n\nconst slotOptions = _.reduce(SLOT_NAMES, (acc, key) => {\n    return {...acc, [key]: parseJSONSelector(slotData[key])};\n}, {});\n\nconst DEFAULT_MONSTER = {\n    name: null,\n    location: null,\n    exp_bonus: null,\n    combat_level: 0,\n    hitpoints: 0,\n    attack_level: 0,\n    defence_level: 0,\n    strength_level: 0,\n    magic_level: 0,\n    ranged_level: 0,\n    attack_style: null,\n    attack_speed: 0,\n    stab_attack: 0,\n    slash_attack: 0,\n    crush_attack: 0,\n    magic_attack: 0,\n    ranged_attack: 0,\n    attack_bonus: 0,\n    melee_strength: 0,\n    ranged_strength: 0,\n    stab_def: 0,\n    slash_def: 0,\n    crush_def: 0,\n    magic_def: 0,\n    ranged_def: 0,\n    interval: null,\n    type: null\n};\n\nconst DEFAULT_STATS = {\n    attack: 99,\n    strength: 99,\n    defence: 99,\n    magic: 99,\n    ranged: 99,\n    hitpoints: 99,\n    prayer: 99,\n\n    attackPrayerId: null,\n    attackPotionId: null,\n    strengthPrayerId: null,\n    strengthPotionId: null,\n    rangedPrayerId: null,\n    rangedPotionId: null,\n};\n\nconst monsterOptions = parseJSONSelector(monsterData);\n\nfunction parseJSONSelector(slot){\n    var ret = []\n    for(var i = 0 ; i < slot.length ; i++){\n        ret[i] = {value: slot[i].name, label: slot[i].name}\n    }\n    return ret;\n}\n\nconst DEFAULT_EQUIPS = _.reduce(SLOT_NAMES, (acc, key) => {\n    return {...acc, [key]: null};\n}, {});\n\nDEFAULT_EQUIPS.attackStyle = null;\n\nfunction App() {\n\n    const [equips, setEquips] = useState(DEFAULT_EQUIPS);\n    const [stats, setStats] = useState(DEFAULT_STATS);\n    const [monster, setMonster] = useState(DEFAULT_MONSTER)\n\n    const onMonsterChange = (monsterId) => {\n        let monster = DEFAULT_MONSTER;\n        if(monsterId) {\n            monster = _.find(monsterData, {name: monsterId.value});\n        }\n        setMonster(monster);\n    };\n\n    const onEquipChange = (selected, type) => {\n        let item = null;\n        let clearShield = false;\n        if(selected) {\n            item = _.find(slotData[type], {name: selected.value});\n            if(type === \"weapon\" && item.two_handed){\n                clearShield = true;\n                // todo: clear attack style if the styles changed\n            }\n        }\n        if(clearShield){\n            setEquips({...equips, shield: null, [type]: item});\n        } else {\n            setEquips({...equips, [type]: item});\n        }\n    };\n\n    const onStatChange = (value, type) => {\n        setStats({...stats, [type]: value});\n    };\n\n    let availableAttackStyles = [];\n    if(equips.weapon) {\n        availableAttackStyles = _.find(allAttackStyles, {id: equips.weapon.attack_style_id})?.styles || [];\n    }\n\n    return (\n\n        <div className=\"App\">\n            <ResultsPanel equips={equips} stats={stats} monster={monster} />\n            <div className=\"equipment-wrapper\">\n                <Select\n                    isClearable\n                    className=\"equipment-slot margin-tb\"\n                    placeholder={`Select Attack Style...`}\n                    options={availableAttackStyles}\n                    value={equips.attackStyle}\n                    onChange={style => setEquips({...equips, attackStyle: style})}\n                />\n                {SLOT_NAMES.map(type => (\n                    <div key={type} className=\"margin-tb\">\n                        <Select\n                            isClearable\n                            isDisabled={type===\"shield\" && equips.weapon && equips.weapon.two_handed}\n                            className=\"equipment-slot\"\n                            placeholder={`Select ${type}...`}\n                            options={slotOptions[type]}\n                            value={equips[type] && {value: equips[type].name, label: equips[type].name}}\n                            onChange={itemId => onEquipChange(itemId, type)}\n                        />\n                    </div>\n                ))}\n\n                <Select\n                    isClearable\n                    className=\"equipment-slot margin-tb\"\n                    placeholder={`Select Enemy...`}\n                    options={monsterOptions}\n                    value={monsterOptions && monsterOptions.name}\n                    onChange={monsterId => onMonsterChange(monsterId)}\n                />\n            </div>\n\n\n            <PlayerStats stats={stats} onStatChange={onStatChange} />\n\n            <div className=\"checkbox-wrapper\">\n                <div className=\"\">\n                    <label className=\"checkbox-label\" htmlFor=\"wild\">Wilderness</label>\n                    <input className=\"checkbox\" type=\"checkbox\" id=\"wild\"></input>\n                </div>\n                <div className=\"\">\n                    <label className=\"checkbox-label\" htmlFor=\"kandarin\">Kandarin</label>\n                    <input className=\"checkbox\" type=\"checkbox\" id=\"kandarin\"></input>\n                </div>\n                <div className=\"\">\n                    <label className=\"checkbox-label\" htmlFor=\"dwh\">Dragon warhammer</label>\n                    <input className=\"checkbox\" type=\"checkbox\" id=\"dwh\"></input>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}