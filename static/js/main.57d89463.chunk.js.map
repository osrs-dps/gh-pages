{"version":3,"sources":["slot_data.js","App.js","serviceWorker.js","index.js"],"names":["weapon","ammo","head","cape","amulet","chest","legs","shield","gloves","boots","ring","SLOT_NAMES","DEFENCE_STYLE_MAP","Stab","Slash","Crush","Magic","Ranged","ATTACK_STYLE_MAP","STR_PRAYERS","value","label","STR_POTIONS","ATT_PRAYERS","ATT_POTIONS","RANGED_PRAYERS","rangedStr","rangedAcc","RANGED_POTIONS","slotOptions","_","reduce","acc","key","parseJSONSelector","slotData","DEFAULT_MONSTER","name","location","exp_bonus","combat_level","hitpoints","attack_level","defence_level","strength_level","magic_level","ranged_level","attack_style","attack_speed","stab_attack","slash_attack","crush_attack","magic_attack","ranged_attack","attack_bonus","melee_strength","ranged_strength","stab_def","slash_def","crush_def","magic_def","ranged_def","interval","type","monsterOptions","monsterData","slot","ret","i","length","App","useState","equips","setEquips","rsn","setRsn","onLevelChange","level","setLevels","levels","attack","strength","defence","magic","ranged","prayer","style","attAccStyle","attDefStyle","attStyle","setAttStyle","totalStrBonus","total","parseInt","str","potionBase","potionMultiplier","other","strBonuses","setStrBonuses","strPotionBonus","Math","floor","effectiveStr","baseDamage","maxHit","totalAttBonus","attBonuses","setAttBonuses","attPotionBonus","effectiveAtt","maxAttRoll","monster","setMonster","maxDefenceRoll","hitChance","dps","availableAttackStyles","find","allAttackStyles","id","attack_style_id","styles","className","rel","href","integrity","crossorigin","map","isClearable","isDisabled","two_handed","placeholder","options","onChange","itemId","selected","item","clearShield","onEquipChange","styleObj","attBonus","strBonus","console","log","onAttStyleChange","monsterId","JSON","stringify","onMonsterChange","Container","Row","Col","lg","Form","Control","input","target","Button","variant","onClick","InputGroup","Prepend","Text","class","potion","base","multiplier","onAttPotionChange","onStrPotionChange","htmlFor","parseFloat","toFixed","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.57d89463.chunk.js","sourcesContent":["import weaponSlot from './data/weapon_slot.json';\nimport ammoSlot from './data/ammo_blessing.json';\nimport headSlot from './data/head_slot.json';\nimport capeSlot from './data/cape_slot.json';\nimport amuletSlot from './data/neck_slot.json';\nimport chestSlot from './data/chest_slot.json';\nimport legsSlot from './data/leg_slot.json';\nimport shieldSlot from './data/shield_slot.json';\nimport glovesSlot from './data/hand_slot.json';\nimport bootsSlot from './data/boot_slot.json';\nimport ringSlot from './data/ring_slot.json';\n\nexport default {\n    weapon: weaponSlot,\n    ammo: ammoSlot,\n    head: headSlot,\n    cape: capeSlot,\n    amulet: amuletSlot,\n    chest: chestSlot,\n    legs: legsSlot,\n    shield: shieldSlot,\n    gloves: glovesSlot,\n    boots: bootsSlot,\n    ring: ringSlot,\n};","import React, { useState } from 'react';\nimport './App.css';\nimport slotData from './slot_data';\nimport monsterData from './data/monsters.json';\nimport allAttackStyles from \"./data/attack_styles.json\";\nimport _ from 'lodash';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {Container, Row, Col, Form, InputGroup, Button} from 'react-bootstrap';\nimport Select from 'react-select';\n\nconst SLOT_NAMES = [\n    'weapon',\n    'shield',\n    'ammo',\n    'head',\n    'cape',\n    'amulet',\n    'chest',\n    'legs',\n    'gloves',\n    'boots',\n    'ring',\n];\n\nconst DEFENCE_STYLE_MAP = {\n    Stab: \"stab_def\",\n    Slash: \"slash_def\",\n    Crush: \"crush_def\",\n    Magic: \"magic_def\",\n    Ranged: \"range_def\"\n};\n\nconst ATTACK_STYLE_MAP = {\n    Stab: \"stab_att\",\n    Slash: \"slash_att\",\n    Crush: \"crush_att\",\n    Magic: \"magic_att\",\n    Ranged: \"range_att\"\n};\n\nconst STR_PRAYERS = [\n    {value: 1.23, label: \"Piety\"},\n    {value: 1.18, label: \"Chivalry\"},\n    {value: 1.15, label: \"Ultimate Strength\"},\n];\n\nconst STR_POTIONS = [\n    {value: \"superStrengthPotion\", label: \"Super Strength Potion\"},\n    {value: \"strengthPotion\", label: \"Strength Potion\"},\n    {value: \"overload(+)\", label: \"Overload (+)\"}\n];\n\nconst ATT_PRAYERS = [\n    {value: 1.20, label: \"Piety\"},\n    {value: 1.15, label: \"Chivalry\"},\n    {value: 1.15000001, label: \"Incredible Reflexes\"},\n    //if the values are the same both will show up as selected when one is - idk how to fix\n];\n\nconst ATT_POTIONS = [\n    {value: \"superAttackPotion\", label: \"Super Attack Potion\"},\n    {value: \"attackPotion\", label: \"Attack Potion\"},\n    {value: \"overload(+)\", label: \"Overload (+)\"}\n];\n\nconst RANGED_PRAYERS = [\n    {\n        label: \"Rigour\",\n        value: {\n            rangedStr: 1.23,\n            rangedAcc: 1.20\n        }\n    },\n    {\n        label: \"Eagle Eye\",\n        value: {\n            rangedStr: 1.15,\n            rangedAcc: 1.15\n        }\n    }\n];\n\nconst RANGED_POTIONS = [\n    {value: \"rangingPotion\", label: \"Ranging Potion\"},\n    {value: \"overload(+)\", label: \"Overload (+)\"}\n];\n\nconst slotOptions = _.reduce(SLOT_NAMES, (acc, key) => {\n    return {...acc, [key]: parseJSONSelector(slotData[key])};\n}, {});\n\nconst DEFAULT_MONSTER = {\n    name: null,\n    location: null,\n    exp_bonus: null,\n    combat_level: 0,\n    hitpoints: 0,\n    attack_level: 0,\n    defence_level: 0,\n    strength_level: 0,\n    magic_level: 0,\n    ranged_level: 0,\n    attack_style: null,\n    attack_speed: 0,\n    stab_attack: 0,\n    slash_attack: 0,\n    crush_attack: 0,\n    magic_attack: 0,\n    ranged_attack: 0,\n    attack_bonus: 0,\n    melee_strength: 0,\n    ranged_strength: 0,\n    stab_def: 0,\n    slash_def: 0,\n    crush_def: 0,\n    magic_def: 0,\n    ranged_def: 0,\n    interval: null,\n    type: null\n};\n\nconst monsterOptions = parseJSONSelector(monsterData);\n\nfunction parseJSONSelector(slot){\n    var ret = []\n    for(var i = 0 ; i < slot.length ; i++){\n        ret[i] = {value: slot[i].name, label: slot[i].name}\n    }\n    return ret;\n}\n\nfunction App() {\n\n    const [equips, setEquips] = useState(_.reduce(SLOT_NAMES, (acc, key) => {\n        return {...acc, [key]: null};\n    }, {}));\n\n    const onEquipChange = (selected, type) => {\n        let item = null;\n        let clearShield = false;\n        if(selected) {\n            item = _.find(slotData[type], {name: selected.value});\n            if(type === \"weapon\" && item.two_handed){\n                clearShield = true;\n            }\n        }\n        if(clearShield){\n            setEquips({...equips, [`shield`]: null, [`${type}`]: item});\n        }\n        else{\n            setEquips({...equips, [`${type}`]: item});\n        }\n    };\n\n    const [rsn, setRsn] = useState(null);\n    const submitRsn = () => {\n        console.log(\"get rsn here\");\n    };\n\n    const onLevelChange = (level, type) => {\n        setLevels({...levels, [`${type}`]: level})\n    };\n    const [levels, setLevels] = useState({\n        attack: 99,\n        strength: 99,\n        defence: 99,\n        magic: 99,\n        ranged: 99,\n        hitpoints: 99,\n        prayer: 99\n    });\n\n    const onAttStyleChange = (styleObj) => {\n        let attBonus = 0;\n        let strBonus = 0;\n        console.log(styleObj);\n        if(styleObj){\n            if(styleObj.value.style === \"Agressive\"){\n                strBonus = 3;\n            }\n            else if(styleObj.value.style === \"Accurate\"){\n                attBonus = 3;\n            }\n            else if(styleObj.value.style === \"Controlled\"){\n                attBonus = 1;\n                strBonus = 1;\n            }\n            setAttStyle({\n                style: styleObj.value.type,\n                attAccStyle: ATTACK_STYLE_MAP[styleObj.value.type],\n                attDefStyle: DEFENCE_STYLE_MAP[styleObj.value.type]\n            });\n        }\n        setAttBonuses({...attBonuses, [`style`]: attBonus});\n        setStrBonuses({...strBonuses, [`style`]: strBonus});\n    };\n\n    const [attStyle, setAttStyle] = useState({\n        style: null,\n        attAccStyle: null,\n        attDefStyle: null\n    });\n\n    //########## Strength Calcs ##########\n    const totalStrBonus = _.reduce(SLOT_NAMES, (total, key) => {\n        return total + (equips[key] ? parseInt(equips[key].str) : 0);\n    }, 0);\n\n    const onStrPotionChange = (potion) => {\n        let base = 0;\n        let multiplier = 0;\n        if(potion === \"strengthPotion\"){\n            base = 3;\n            multiplier = 0.1;\n        }\n        else if(potion === \"superStrengthPotion\"){\n            base = 5;\n            multiplier = 0.15;\n        }\n        else if(potion === \"overload(+)\"){\n            base = 6;\n            multiplier = 0.16;\n        }\n        setStrBonuses({...strBonuses, [`potionBase`]: base, [`potionMultiplier`]: multiplier});\n    };\n\n    const [strBonuses, setStrBonuses] = useState({\n        potionBase: 0,\n        potionMultiplier: 0,\n        prayer: 1,\n        other: 1,\n        style: 0\n    })\n\n    //https://oldschool.runescape.wiki/w/Maximum_melee_hit\n    const strPotionBonus = strBonuses.potionBase + Math.floor(levels.strength*strBonuses.potionMultiplier);\n\n    const effectiveStr = Math.floor(((levels.strength + strPotionBonus) * strBonuses.prayer * 1) + strBonuses.style);\n    //Effective Strength = ((Strength Level + Potion Bonus) * Prayer Bonus * Other Bonus) + Style Bonus\n    //todo: attack style, void, slayer helm, void\n\n    const baseDamage = Math.floor(1.3 + effectiveStr/10 + totalStrBonus/80 + (effectiveStr*totalStrBonus)/640);\n\n    const maxHit = baseDamage * 1;\n    //todo: dharoks, obsidian, special attack bonuses\n\n    //########## Attack Calcs ##########\n    const totalAttBonus = _.reduce(SLOT_NAMES, (total, key) => {\n        return total + ((equips[key] && attStyle.attAccStyle)? parseInt(equips[key][attStyle.attAccStyle]) : 0);\n    }, 0);\n    //change slash_att for other styles\n\n    const onAttPotionChange = (potion) => {\n        let base = 0;\n        let multiplier = 0;\n        if(potion === \"attackPotion\"){\n            base = 3;\n            multiplier = 0.1;\n        }\n        else if(potion === \"superAttackPotion\"){\n            base = 5;\n            multiplier = 0.15;\n        }\n        else if(potion === \"overload(+)\"){\n            base = 6;\n            multiplier = 0.16;\n        }\n        setAttBonuses({...attBonuses, [`potionBase`]: base, [`potionMultiplier`]: multiplier});\n    };\n\n    const [attBonuses, setAttBonuses] = useState({\n        potionBase: 0,\n        potionMultiplier: 0,\n        prayer: 1,\n        other: 1,\n        style: 0\n    });\n\n    const attPotionBonus = attBonuses.potionBase + Math.floor(levels.attack*attBonuses.potionMultiplier);\n\n    const effectiveAtt = Math.floor(((levels.attack + attPotionBonus) * attBonuses.prayer * 1) + attBonuses.style + 8);\n    //todo: attack style, void, slayer helm, void\n\n    const maxAttRoll = effectiveAtt * (totalAttBonus + 64) * 1;\n    //salve, slayer, arclight, dchb, dhl, wildy weapons, tbow\n\n    //########## Enemy Defence Calcs ##########\n    const [monster, setMonster] = useState(DEFAULT_MONSTER)\n\n    const onMonsterChange = (monsterId) => {\n        let monster = DEFAULT_MONSTER;\n        if(monsterId) {\n            monster = _.find(monsterData, {name: monsterId.value});\n        }\n        console.log(JSON.stringify(monster));\n        setMonster(monster);\n    };\n\n    const effectiveDefence = monster.defence_level + 9;\n\n    const monsterDefStyle = attStyle.style ? monster[attStyle.attDefStyle] : 0;\n\n    const maxDefenceRoll = effectiveDefence * (monsterDefStyle + 64);\n\n    const hitChance = maxAttRoll > maxDefenceRoll ? 1 - (maxDefenceRoll + 2) / (2 * (maxAttRoll + 1)):\n    maxAttRoll / (2 * (maxDefenceRoll + 1));\n\n    const dps = hitChance * (maxHit / 2) / (6 - (equips.weapon?equips.weapon.attack_speed:5) * 0.6);\n\n    let availableAttackStyles = [];\n    if(equips.weapon) {\n        availableAttackStyles = _.find(allAttackStyles, {id: equips.weapon.attack_style_id})?.styles || [];\n    }\n\n    return (\n\n        <div className=\"App\">\n            <link\n                rel=\"stylesheet\"\n                href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n                integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\"\n                crossorigin=\"anonymous\"\n            />\n            <div className=\"equipment-wrapper\">\n                {SLOT_NAMES.map(type => (\n                    <div key={type} className=\"margin-tb\">\n                        <Select\n                            isClearable\n                            isDisabled={type===\"shield\" && equips.weapon && equips.weapon.two_handed}\n                            className=\"equipment-slot\"\n                            placeholder={`Select ${type}...`}\n                            options={slotOptions[type]}\n                            value={equips[type] && {value: equips[type].name, label: equips[type].name}}\n                            onChange={itemId => onEquipChange(itemId, type)}\n                        />\n                    </div>\n                ))}\n\n                <Select\n                    isClearable\n                    className=\"equipment-slot margin-tb\"\n                    placeholder={`Select Attack Style...`}\n                    options={availableAttackStyles}\n                    onChange={style => onAttStyleChange(style)}\n                />\n\n                <Select\n                    isClearable\n                    className=\"equipment-slot margin-tb\"\n                    placeholder={`Select Enemy...`}\n                    options={monsterOptions}\n                    value={monsterOptions && monsterOptions.name}\n                    onChange={monsterId => onMonsterChange(monsterId)}\n                />\n            </div>\n\n\n            <div className=\"stats-wrapper\">\n                <div className=\"margin-tb\">\n                    <Container>\n                        <Row>\n                            <Col className=\"noPadding\" lg=\"3\">\n                                <Form.Control\n                                    placeholder=\"Enter RSN...\"\n                                    value={rsn}\n                                    onChange={input => setRsn(input.target.value)}\n                                />\n                            </Col>\n                            <Col>\n                                <Button\n                                    variant=\"primary\"\n                                    onClick={submitRsn}\n                                    >\n                                        Search\n                                    </Button>{' '}</Col>\n                                </Row>\n                            </Container>\n                        </div>\n                        <div className=\"margin-tb\">\n                            <Container>\n                                <Row>\n                                    <Col className=\"noPadding\" lg=\"2\">\n                                        <InputGroup>\n                                            <InputGroup.Prepend>\n                                                <InputGroup.Text id=\"basic-addon3\">\n                                                    Attack\n                                                </InputGroup.Text>\n                                            </InputGroup.Prepend>\n                                            <Form.Control\n                                                type=\"number\"\n                                                class=\"stat-input\"\n                                                id=\"attack\"\n                                                value={levels.attack}\n                                                onChange={level => onLevelChange(parseInt(level.target.value), \"attack\")}\n                                            />\n                                        </InputGroup>\n                                    </Col>\n                                    <Col lg=\"3\"><Select\n                                        isClearable\n                                        placeholder={`Potion`}\n                                        options={ATT_POTIONS}\n                                        onChange={potion => onAttPotionChange(potion && potion.value)}\n                                    /></Col>\n                                    <Col lg=\"3\"><Select\n                                        isClearable\n                                        placeholder={`Prayer`}\n                                        options={ATT_PRAYERS}\n                                        onChange={prayer => setAttBonuses({...attBonuses, [`prayer`]:prayer ? prayer.value : 1})}\n                                    /></Col>\n                                </Row>\n                            </Container>\n                        </div>\n                        <div className=\"margin-tb\">\n                            <Container>\n                                <Row>\n                                    <Col className=\"noPadding\" lg=\"2\">\n                                        <InputGroup>\n                                            <InputGroup.Prepend>\n                                                <InputGroup.Text id=\"basic-addon3\">\n                                                    Strength\n                                                </InputGroup.Text>\n                                            </InputGroup.Prepend>\n                                            <Form.Control className=\"stat-input\"\n                                                type=\"number\"\n                                                id=\"str\"\n                                                value={levels.strength}\n                                                onChange={level => onLevelChange(parseInt(level.target.value), \"strength\")}\n                                            />\n                                        </InputGroup>\n                                    </Col>\n                                    <Col lg=\"3\"><Select\n                                        isClearable\n                                        placeholder={`Potion`}\n                                        options={STR_POTIONS}\n                                        onChange={potion => onStrPotionChange(potion && potion.value)}\n                                    /></Col>\n                                    <Col lg=\"3\"><Select\n                                        isClearable\n                                        placeholder={`Prayer`}\n                                        options={STR_PRAYERS}\n                                        onChange={prayer => setStrBonuses({...strBonuses, [`prayer`]:prayer ? prayer.value : 1})}\n                                    /></Col>\n                                </Row>\n                            </Container>\n                        </div>\n                        <div className=\"margin-tb\">\n                            <Container>\n                                <Row>\n                                    <Col className=\"noPadding\" lg=\"2\">\n                                        <InputGroup>\n                                            <InputGroup.Prepend>\n                                                <InputGroup.Text id=\"basic-addon3\">\n                                                    Magic\n                                                </InputGroup.Text>\n                                            </InputGroup.Prepend>\n                                            <Form.Control\n                                                className=\"stat-input\"\n                                                type=\"number\"\n                                                id=\"magic\"\n                                                value={levels.magic}\n                                                onChange={level => onLevelChange(parseInt(level.target.value), \"magic\")}\n                                            />\n                                        </InputGroup>\n                                    </Col>\n                                    <Col lg=\"3\"><Select\n                                        isClearable\n                                        placeholder={`Potion`}\n                                    /></Col>\n                                    <Col lg=\"3\"><Select\n                                        isClearable\n                                        placeholder={`Prayer`}\n                                    /></Col>\n                                </Row>\n                            </Container>\n                        </div>\n                        <div className=\"margin-tb\">\n                            <Container>\n                                <Row>\n                                    <Col className=\"noPadding\" lg=\"2\">\n                                        <InputGroup>\n                                            <InputGroup.Prepend>\n                                                <InputGroup.Text id=\"basic-addon3\">\n                                                    Ranged\n                                                </InputGroup.Text>\n                                            </InputGroup.Prepend>\n                                            <Form.Control\n                                                className=\"stat-input\"\n                                                type=\"number\"\n                                                id=\"ranged\"\n                                                value={levels.ranged}\n                                                onChange={level => onLevelChange(parseInt(level.target.value), \"ranged\")}\n                                            />\n                                        </InputGroup>\n                                    </Col>\n                                    <Col lg=\"3\"><Select\n                                        isClearable\n                                        options={RANGED_POTIONS}\n                                        placeholder={`Potion`}\n                                    /></Col>\n                                    <Col lg=\"3\"><Select\n                                        isClearable\n                                        options={RANGED_PRAYERS}\n                                        placeholder={`Prayer`}\n                                    /></Col>\n                                </Row>\n                            </Container>\n                        </div>\n                    </div>\n\n                    <div className=\"checkbox-wrapper\">\n                        <div className=\"\">\n                            <label className=\"checkbox-label\" htmlFor=\"wild\">Wilderness</label>\n                            <input className=\"checkbox\" type=\"checkbox\" id=\"wild\"></input>\n                        </div>\n                        <div className=\"\">\n                            <label className=\"checkbox-label\" htmlFor=\"kandarin\">Kandarin</label>\n                            <input className=\"checkbox\" type=\"checkbox\" id=\"kandarin\"></input>\n                        </div>\n                        <div className=\"\">\n                            <label className=\"checkbox-label\" htmlFor=\"dwh\">Dragon warhammer</label>\n                            <input className=\"checkbox\" type=\"checkbox\" id=\"dwh\"></input>\n                        </div>\n                    </div>\n\n                    <div className=\"stats\">\n                        <div>\n                            <div className=\"stat-left\">\n                                Damage Per Second\n                            </div>\n                            <div className=\"stat-right\">\n                                {parseFloat(dps.toFixed(6))}\n                            </div>\n                        </div>\n                        <div>\n                            <div className=\"stat-left\">\n                                Max hit\n                            </div>\n                            <div className=\"stat-right\">\n                                {maxHit}\n                            </div>\n                        </div>\n                        <div>\n                            <div className=\"stat-left\">\n                                Attack Bonus\n                            </div>\n                            <div className=\"stat-right\">\n                                {totalAttBonus}\n                            </div>\n                        </div>\n                        <div>\n                            <div className=\"stat-left\">\n                                Effective Attack\n                            </div>\n                            <div className=\"stat-right\">\n                                {effectiveAtt}\n                            </div>\n                        </div>\n                        <div>\n                            <div className=\"stat-left\">\n                                Max Attack Roll\n                            </div>\n                            <div className=\"stat-right\">\n                                {maxAttRoll}\n                            </div>\n                        </div>\n                        <div>\n                            <div className=\"stat-left\">\n                                Max Defence Roll\n                            </div>\n                            <div className=\"stat-right\">\n                                {maxDefenceRoll}\n                            </div>\n                        </div>\n                        <div>\n                            <div className=\"stat-left\">\n                                Accuracy\n                            </div>\n                            <div className=\"stat-right\">\n                                {parseFloat(hitChance.toFixed(6))}\n                            </div>\n                        </div>\n                        <div>\n                            <div className=\"stat-left\">\n                                Strength bonus\n                            </div>\n                            <div className=\"stat-right\">\n                                {totalStrBonus}\n                            </div>\n                        </div>\n                        <div>\n                            <div className=\"stat-left\">\n                                Effective Strength\n                            </div>\n                            <div className=\"stat-right\">\n                                {effectiveStr}\n                            </div>\n                        </div>\n                        <div>\n                            <div className=\"stat-left\">\n                                Base Damage\n                            </div>\n                            <div className=\"stat-right\">\n                                {baseDamage}\n                            </div>\n                        </div>\n                        <div>\n                            <div className=\"stat-left stat-bottom\">\n                                Accuracy bonus\n                            </div>\n                            <div className=\"stat-right stat-bottom\">\n                                {totalAttBonus}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}