{"version":3,"sources":["slot_data.js","data/boosts.js","components/PlayerStats.js","lib/constants.js","lib/calc.js","components/ResultsPanel.js","components/MonsterPanel.js","components/GearSelector.js","App.js","lib/custom_hooks.js","serviceWorker.js","index.js"],"names":["weapon","ammo","head","cape","amulet","chest","legs","shield","gloves","boots","ring","STR_PRAYERS","id","multiplier","label","STR_POTIONS","base","ATT_PRAYERS","ATT_POTIONS","RANGED_PRAYERS","str","acc","RANGED_POTIONS","MAGIC_PRAYERS","MAGIC_POTIONS","IdSelect","data","value","options","onChange","rest","map","boost","_","find","selected","PlayerStats","stats","onStatChange","Container","Row","Col","className","lg","InputGroup","Prepend","Text","Form","Control","type","attack","e","parseInt","target","isClearable","placeholder","BOOSTS","strength","magic","ranged","SLOT_NAMES","DEFENCE_STYLE_MAP","Stab","Slash","Crush","Magic","Ranged","ATTACK_STYLE_MAP","STRENGTH_STYLE_MAP","potionBuff","level","potion","Math","floor","calc","equips","monster","attackStyle","dps","maxHit","totalAttBonus","effectiveAtt","maxAttRoll","maxDefenceRoll","hitChance","totalStrBonus","effectiveStr","baseDamage","rangedPotion","rangedPotionId","rangedPrayer","rangedPrayerId","field","reduce","total","key","equipTotal","rangedPotionBonus","styleAttBonus","Accurate","style","attPotionBonus","defence_level","ranged_def","attack_speed","styleStrBonus","Aggressive","Controlled","strPotion","strengthPotionId","strPrayer","strengthPrayerId","strPotionBonus","attStyleType","attPotion","attackPotionId","attPrayer","attackPrayerId","defStyleType","ResultsPanel","calculations","calculateResults","round","row","stat","toFixed","MonsterPanel","val","isNil","slotOptions","slot","ret","i","length","name","parseJSONSelector","slotData","renderSlotSelector","onEquipChange","styleType","attBonusField","strBonusField","src","alt","isDisabled","two_handed","itemId","setEquips","remove","availableAttackStyles","allAttackStyles","attack_style_id","styles","getAttackStylesFromWeapon","item","changeset","Button","variant","onClick","without","DEFAULT_MONSTER","location","exp_bonus","combat_level","hitpoints","attack_level","strength_level","magic_level","ranged_level","attack_style","stab_attack","slash_attack","crush_attack","magic_attack","ranged_attack","attack_bonus","melee_strength","ranged_strength","stab_def","slash_def","crush_def","magic_def","interval","DEFAULT_STATS","defence","prayer","monsterOptions","monsterData","DEFAULT_EQUIPS","App","defaultSingleValue","useState","values","setValues","index","filter","newValue","useArrayState","equipSets","addEquipSet","removeEquipSet","editEquipSet","setStats","setMonster","monsterId","onMonsterChange","htmlFor","equipSet","GearSelector","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6ae5907f.chunk.js","sourcesContent":["import weaponSlot from './data/weapon_slot.json';\nimport ammoSlot from './data/ammo_blessing.json';\nimport headSlot from './data/head_slot.json';\nimport capeSlot from './data/cape_slot.json';\nimport amuletSlot from './data/neck_slot.json';\nimport chestSlot from './data/chest_slot.json';\nimport legsSlot from './data/leg_slot.json';\nimport shieldSlot from './data/shield_slot.json';\nimport glovesSlot from './data/hand_slot.json';\nimport bootsSlot from './data/boot_slot.json';\nimport ringSlot from './data/ring_slot.json';\n\nexport default {\n    weapon: weaponSlot,\n    ammo: ammoSlot,\n    head: headSlot,\n    cape: capeSlot,\n    amulet: amuletSlot,\n    chest: chestSlot,\n    legs: legsSlot,\n    shield: shieldSlot,\n    gloves: glovesSlot,\n    boots: bootsSlot,\n    ring: ringSlot,\n};","\nexport default {\n    STR_PRAYERS: [\n        {id: 1, multiplier: 1.23, label: 'Piety'},\n        {id: 2, multiplier: 1.18, label: 'Chivalry'},\n        {id: 3, multiplier: 1.15, label: 'Ultimate Strength'},\n    ],\n\n    STR_POTIONS: [\n        {id: 1, base: 6, multiplier: 0.16, label: 'Overload (+)'},\n        {id: 2, base: 5, multiplier: 0.15, label: 'Super Strength Potion'},\n        {id: 3, base: 3, multiplier: 0.1, label: 'Strength Potion'},\n    ],\n\n    ATT_PRAYERS: [\n        {id: 1, multiplier: 1.20, label: 'Piety'},\n        {id: 2, multiplier: 1.15, label: 'Chivalry'},\n        {id: 3, multiplier: 1.15, label: 'Incredible Reflexes'},\n    ],\n\n    ATT_POTIONS: [\n        {id: 1, base: 6, multiplier: 0.16, label: 'Overload (+)'},\n        {id: 2, base: 5, multiplier: 0.15, label: 'Super Attack Potion'},\n        {id: 3, base: 3, multiplier: 0.1, label: 'Attack Potion'},\n    ],\n\n    RANGED_PRAYERS: [\n        {id: 1, label: 'Rigour', str: 1.23, acc: 1.20 },\n        {id: 2, label: 'Eagle Eye', str: 1.15, acc: 1.15 },\n    ],\n\n    RANGED_POTIONS: [\n        {id: 1, base: 4, multiplier: 0.1, label: 'Ranging Potion'},\n        {id: 2, base: 6, multiplier: 0.16, label: 'Overload (+)'},\n    ],\n\n    MAGIC_PRAYERS: [\n        {id: 1, multiplier: 1.05, label: '5% Magic Prayer'},\n    ],\n\n    MAGIC_POTIONS: [\n        {id: 1, base: 1, multiplier: 0.0, label: '1 Magic Level'},\n    ],\n\n};\n","import React from 'react';\nimport {Container, Row, Col, Form, InputGroup} from 'react-bootstrap';\nimport Select from 'react-select';\nimport BOOSTS from '../data/boosts';\nimport _ from 'lodash';\n\nconst boostOptions = data => data.map(boost => ({value: boost.id, label: boost.label}));\n\nfunction IdSelect({value, options, onChange, ...rest}) {\n    return (\n        <Select\n            options={boostOptions(options)}\n            value={value && _.find(options, {id: value})}\n            onChange={selected => onChange(selected?.value)}\n            {...rest}\n        />\n    );\n}\n\nfunction PlayerStats({stats, onStatChange}) {\n    return (\n        <div>\n            <div>\n                <Container>\n                    <Row>\n                        <Col className=\"noPadding\" lg=\"2\">\n                            <InputGroup>\n                                <InputGroup.Prepend>\n                                    <InputGroup.Text id=\"basic-addon3\">\n                                        Attack\n                                    </InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <Form.Control\n                                    type=\"number\"\n                                    className=\"stat-input\"\n                                    id=\"attack\"\n                                    value={stats.attack}\n                                    onChange={e => onStatChange(parseInt(e.target.value), 'attack')}\n                                />\n                            </InputGroup>\n                        </Col>\n                        <Col lg=\"3\"><IdSelect\n                            isClearable\n                            placeholder='Attack Potion'\n                            options={BOOSTS.ATT_POTIONS}\n                            onChange={id => onStatChange(id, 'attackPotionId')}\n                        /></Col>\n                        <Col lg=\"3\"><IdSelect\n                            isClearable\n                            placeholder='Attack Prayer'\n                            options={BOOSTS.ATT_PRAYERS}\n                            onChange={id => onStatChange(id, 'attackPrayerId')}\n                        /></Col>\n                    </Row>\n                </Container>\n            </div>\n            <div>\n                <Container>\n                    <Row>\n                        <Col className=\"noPadding\" lg=\"2\">\n                            <InputGroup>\n                                <InputGroup.Prepend>\n                                    <InputGroup.Text id=\"basic-addon3\">\n                                        Strength\n                                    </InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <Form.Control className=\"stat-input\"\n                                    type=\"number\"\n                                    id=\"str\"\n                                    value={stats.strength}\n                                    onChange={e => onStatChange(parseInt(e.target.value), 'strength')}\n                                />\n                            </InputGroup>\n                        </Col>\n                        <Col lg=\"3\"><IdSelect\n                            isClearable\n                            placeholder='Strength Potion'\n                            options={BOOSTS.STR_POTIONS}\n                            onChange={id => onStatChange(id, 'strengthPotionId')}\n                        /></Col>\n                        <Col lg=\"3\"><IdSelect\n                            isClearable\n                            placeholder='Strength Prayer'\n                            options={BOOSTS.STR_PRAYERS}\n                            onChange={id => onStatChange(id, 'strengthPrayerId')}\n                        /></Col>\n                    </Row>\n                </Container>\n            </div>\n            <div>\n                <Container>\n                    <Row>\n                        <Col className=\"noPadding\" lg=\"2\">\n                            <InputGroup>\n                                <InputGroup.Prepend>\n                                    <InputGroup.Text id=\"basic-addon3\">\n                                        Magic\n                                    </InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <Form.Control\n                                    className=\"stat-input\"\n                                    type=\"number\"\n                                    id=\"magic\"\n                                    value={stats.magic}\n                                    onChange={e => onStatChange(parseInt(e.target.value), 'magic')}\n                                />\n                            </InputGroup>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n            <div>\n                <Container>\n                    <Row>\n                        <Col className=\"noPadding\" lg=\"2\">\n                            <InputGroup>\n                                <InputGroup.Prepend>\n                                    <InputGroup.Text id=\"basic-addon3\">\n                                        Ranged\n                                    </InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <Form.Control\n                                    className=\"stat-input\"\n                                    type=\"number\"\n                                    id=\"ranged\"\n                                    value={stats.ranged}\n                                    onChange={e => onStatChange(parseInt(e.target.value), 'ranged')}\n                                />\n                            </InputGroup>\n                        </Col>\n                        <Col lg=\"3\"><IdSelect\n                            isClearable\n                            options={BOOSTS.RANGED_POTIONS}\n                            placeholder='Ranged Potion'\n                            onChange={id => onStatChange(id, 'rangedPotionId')}\n                        /></Col>\n                        <Col lg=\"3\"><IdSelect\n                            isClearable\n                            options={BOOSTS.RANGED_PRAYERS}\n                            placeholder='Ranged Prayer'\n                            onChange={id => onStatChange(id, 'rangedPrayerId')}\n                        /></Col>\n                    </Row>\n                </Container>\n            </div>\n        </div>\n    );\n\n}\n\nexport default PlayerStats;\n","export const SLOT_NAMES = [\n    'weapon',\n    'shield',\n    'ammo',\n    'head',\n    'cape',\n    'amulet',\n    'chest',\n    'legs',\n    'gloves',\n    'boots',\n    'ring',\n];\n\nexport const DEFENCE_STYLE_MAP = {\n    Stab: 'stab_def',\n    Slash: 'slash_def',\n    Crush: 'crush_def',\n    Magic: 'magic_def',\n    Ranged: 'range_def'\n};\n\nexport const ATTACK_STYLE_MAP = {\n    Stab: 'stab_att',\n    Slash: 'slash_att',\n    Crush: 'crush_att',\n    Magic: 'magic_att',\n    Ranged: 'range_att'\n};\n\nexport const STRENGTH_STYLE_MAP = {\n    Stab: 'str',\n    Slash: 'str',\n    Crush: 'str',\n    Magic: 'magic_str',\n    Ranged: 'range_str'\n};\n","import {\n    SLOT_NAMES,\n    DEFENCE_STYLE_MAP,\n    ATTACK_STYLE_MAP,\n} from './constants';\nimport BOOSTS from '../data/boosts';\nimport _ from 'lodash';\n\nfunction potionBuff(level, potion) {\n    return potion.base + Math.floor(level * potion.multiplier);\n}\n\nfunction equipTotal(equips, field) {\n    return _.reduce(SLOT_NAMES, (total, key) => {\n        return total + (equips[key] ? parseInt(equips[key][field]) : 0);\n    }, 0);\n}\n\nfunction calc(stats, equips, monster) {\n    if(!equips.attackStyle) {\n        return {\n            dps: 'N/A',\n            maxHit: 'N/A',\n            totalAttBonus: 'N/A',\n            effectiveAtt: 'N/A',\n            maxAttRoll: 'N/A',\n            maxDefenceRoll: 'N/A',\n            hitChance: 'N/A',\n            totalStrBonus: 'N/A',\n            effectiveStr: 'N/A',\n            baseDamage: 'N/A',\n        };\n    }\n    const rangedPotion = _.find(BOOSTS.RANGED_POTIONS, {id: stats.rangedPotionId}) || {base: 0, multiplier: 0};\n    const rangedPrayer = _.find(BOOSTS.RANGED_PRAYERS, {id: stats.rangedPrayerId}) || {acc: 1, str: 1};\n\n    if(equips.attackStyle?.value?.type === 'Ranged'){\n\n        const totalStrBonus = equipTotal(equips, 'range_str');\n\n        const rangedPotionBonus = potionBuff(stats.ranged, rangedPotion);\n\n        const effectiveStr = Math.floor(((stats.ranged + rangedPotionBonus) * rangedPrayer.str * 1));\n        const baseDamage = Math.floor( 1.3 + (effectiveStr/10) + (totalStrBonus/80) + ((effectiveStr*totalStrBonus)/640) );\n\n        const specialBonus = 1;\n        const maxHit = baseDamage * specialBonus;\n\n        // ########## Attack Calcs ##########\n        const styleAttBonus = {Accurate: 3}[equips.attackStyle?.value?.style] || 0;\n\n        const totalAttBonus = _.reduce(SLOT_NAMES, (total, key) => {\n            return total + (equips[key]? parseInt(equips[key]['range_att']) : 0);\n        }, 0);\n\n        const attPotionBonus = potionBuff(stats.ranged, rangedPotion);\n\n        const effectiveAtt = Math.floor(((stats.ranged + attPotionBonus) * rangedPrayer.acc * 1) + styleAttBonus + 8);\n        // todo: attack style, void, slayer helm, void\n\n        const maxAttRoll = effectiveAtt * (totalAttBonus + 64) * 1;\n        // salve, slayer, arclight, dchb, dhl, wildy weapons, tbow\n\n        // ########## Enemy Defence Calcs ##########\n\n        const effectiveDefence = monster.defence_level + 9;\n        const monsterDefStyle = monster.ranged_def;\n        const maxDefenceRoll = effectiveDefence * (monsterDefStyle + 64);\n\n        // ########## DPS ##########\n\n        let hitChance;\n\n        if(maxAttRoll > maxDefenceRoll) {\n            hitChance = 1 - (maxDefenceRoll + 2) / (2 * (maxAttRoll + 1));\n        } else {\n            hitChance = maxAttRoll / (2 * (maxDefenceRoll + 1));\n        }\n\n        // \"attack speed\" is (10 - weapon_tick_interval)\n        // for example, whip = 4 tick interval, so the attack speed is (10-4) = 6\n        const attackSpeed = (equips.attackStyle?.value?.style === 'Rapid') ? equips.weapon?.attack_speed + 1 || 6 :equips.weapon?.attack_speed || 6;\n        const tickInterval = 10 - attackSpeed;\n        const timeBetweenAttacks = tickInterval * 0.6;\n        const dps = hitChance * (maxHit / 2) / timeBetweenAttacks;\n\n        return {\n            dps,\n            maxHit,\n            totalAttBonus,\n            effectiveAtt,\n            maxAttRoll,\n            maxDefenceRoll,\n            hitChance,\n            totalStrBonus,\n            effectiveStr,\n            baseDamage,\n        };\n    }\n    else if(equips.attackStyle?.value?.type === 'Magic'){\n\n    }\n    else{\n        // ########## Strength Calcs ##########\n\n        const styleStrBonus = {Aggressive: 3, Controlled: 1}[equips.attackStyle?.value?.style] || 0;\n        const strPotion = _.find(BOOSTS.STR_POTIONS, {id: stats.strengthPotionId}) || {base: 0, multiplier: 0};\n        const strPrayer = _.find(BOOSTS.STR_PRAYERS, {id: stats.strengthPrayerId}) || {multiplier: 1};\n\n        const totalStrBonus = _.reduce(SLOT_NAMES, (total, key) => {\n            return total + (equips[key] ? parseInt(equips[key].str) : 0);\n        }, 0);\n\n        // https://oldschool.runescape.wiki/w/Maximum_melee_hit\n\n        const strPotionBonus = potionBuff(stats.strength, strPotion);\n\n        const effectiveStr = Math.floor(((stats.strength + strPotionBonus) * strPrayer.multiplier * 1) + styleStrBonus);\n        // Effective Strength = ((Strength Level + Potion Bonus) * Prayer Bonus * Other Bonus) + Style Bonus\n        // todo: attack style, void, slayer helm, void\n\n        const baseDamage = Math.floor( 1.3 + (effectiveStr/10) + (totalStrBonus/80) + ((effectiveStr*totalStrBonus)/640) );\n\n        const specialBonus = 1;\n        const maxHit = baseDamage * specialBonus;\n        // todo: dharoks, obsidian, special attack bonuses\n\n        // ########## Attack Calcs ##########\n        const attStyleType = ATTACK_STYLE_MAP[equips.attackStyle?.value?.type];\n        const styleAttBonus = {Accurate: 3, Controlled: 1}[equips.attackStyle?.value?.style] || 0;\n        const attPotion = _.find(BOOSTS.ATT_POTIONS, {id: stats.attackPotionId}) || {base: 0, multiplier: 0};\n        const attPrayer = _.find(BOOSTS.ATT_PRAYERS, {id: stats.attackPrayerId}) || {multiplier: 1};\n\n        const totalAttBonus = _.reduce(SLOT_NAMES, (total, key) => {\n            return total + ((equips[key] && attStyleType)? parseInt(equips[key][attStyleType]) : 0);\n        }, 0);\n\n        const attPotionBonus = potionBuff(stats.attack, attPotion);\n\n        const effectiveAtt = Math.floor(((stats.attack + attPotionBonus) * attPrayer.multiplier * 1) + styleAttBonus + 8);\n        // todo: attack style, void, slayer helm, void\n\n        const maxAttRoll = effectiveAtt * (totalAttBonus + 64) * 1;\n        // salve, slayer, arclight, dchb, dhl, wildy weapons, tbow\n\n        // ########## Enemy Defence Calcs ##########\n        const defStyleType = DEFENCE_STYLE_MAP[equips.attackStyle?.value?.type];\n        const effectiveDefence = monster.defence_level + 9;\n        const monsterDefStyle = defStyleType ? monster[defStyleType] : 0;\n        const maxDefenceRoll = effectiveDefence * (monsterDefStyle + 64);\n\n        // ########## DPS ##########\n\n        let hitChance;\n\n        if(maxAttRoll > maxDefenceRoll) {\n            hitChance = 1 - (maxDefenceRoll + 2) / (2 * (maxAttRoll + 1));\n        } else {\n            hitChance = maxAttRoll / (2 * (maxDefenceRoll + 1));\n        }\n\n        // \"attack speed\" is (10 - weapon_tick_interval)\n        // for example, whip = 4 tick interval, so the attack speed is (10-4) = 6\n        const attackSpeed = equips.weapon?.attack_speed || 6;\n        const tickInterval = 10 - attackSpeed;\n        const timeBetweenAttacks = tickInterval * 0.6;\n        const dps = hitChance * (maxHit / 2) / timeBetweenAttacks;\n\n        return {\n            dps,\n            maxHit,\n            totalAttBonus,\n            effectiveAtt,\n            maxAttRoll,\n            maxDefenceRoll,\n            hitChance,\n            totalStrBonus,\n            effectiveStr,\n            baseDamage,\n        };\n    }\n}\n\nexport default calc;\n","import React from 'react';\nimport calculateResults from '../lib/calc';\n\nfunction ResultsPanel({stats, equips, monster}) {\n\n    const calculations = calculateResults(stats, equips, monster);\n\n    const rows = [\n        {label: 'Damage Per Second', field: 'dps', round: true},\n        {label: 'Max hit', field: 'maxHit'},\n        {label: 'Attack Bonus', field: 'totalAttBonus'},\n        {label: 'Effective Attack', field: 'effectiveAtt'},\n        {label: 'Max Attack Roll', field: 'maxAttRoll'},\n        {label: 'Max Defence Roll', field: 'maxDefenceRoll'},\n        {label: 'Accuracy', field: 'hitChance', round: true},\n        {label: 'Strength bonus', field: 'totalStrBonus'},\n        {label: 'Effective Strength', field: 'effectiveStr'},\n        {label: 'Base Damage', field: 'baseDamage'},\n    ];\n\n    return (\n        <div className=\"stats\">\n            {rows.map(row => {\n                let stat = calculations[row.field];\n                if(row.round && stat.toFixed) {\n                    stat = stat.toFixed(6);\n                }\n                return (\n                    <div key={row.label}>\n                        <div className=\"stat-left\">{row.label}</div>\n                        <div className=\"stat-right\">{stat}</div>\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\n\nexport default ResultsPanel;\n","import React from 'react';\nimport _ from 'lodash';\n\nfunction MonsterPanel({monster}) {\n    const monsterStatsIWannaShow = [\n        'combat_level',\n        'hitpoints',\n        'defence_level',\n        'magic_level',\n        'stab_def',\n        'slash_def',\n        'crush_def',\n        'magic_def',\n        'ranged_def',\n    ];\n\n    return (\n        <div className=\"stats\">\n            {monsterStatsIWannaShow.map(field => {\n                const val = monster[field];\n                return (\n                    <div key={field}>\n                        <div className=\"stat-left\">{field}</div>\n                        <div className=\"stat-right\">{(_.isNil(val) || val === '') ? 'N/A' : val}</div>\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\n\nexport default MonsterPanel;\n","import React from 'react';\nimport _ from 'lodash';\nimport slotData from '../slot_data';\nimport Select from 'react-select';\nimport allAttackStyles from '../data/attack_styles.json';\nimport { Button } from 'react-bootstrap';\n\nimport {\n  SLOT_NAMES,\n  ATTACK_STYLE_MAP,\n  STRENGTH_STYLE_MAP,\n} from '../lib/constants';\n\nfunction getAttackStylesFromWeapon(weapon) {\n  if (!weapon) {\n    return [];\n  }\n  return _.find(allAttackStyles, { id: weapon.attack_style_id })?.styles || [];\n}\n\nfunction parseJSONSelector(slot) {\n  var ret = [];\n  for (var i = 0; i < slot.length; i++) {\n    ret[i] = { value: slot[i].name, label: slot[i].name };\n  }\n  return ret;\n}\n\nconst slotOptions = _.reduce(SLOT_NAMES, (acc, key) => {\n  return { ...acc, [key]: parseJSONSelector(slotData[key]) };\n}, {});\n\nfunction renderSlotSelector(type, equips, onEquipChange) {\n  const styleType = equips.attackStyle?.value?.type;\n  const attBonusField = ATTACK_STYLE_MAP[styleType];\n  const strBonusField = STRENGTH_STYLE_MAP[styleType];\n\n  return (\n    <div key={type} className='equipment-row'>\n      <img src={`/images/${type}_slot.png`} alt={`${type} slot`} />\n      <Select\n        isClearable\n        isDisabled={type === 'shield' && equips.weapon?.two_handed}\n        className=\"equipment-slot\"\n        placeholder={`Select ${type}...`}\n        options={slotOptions[type]}\n        value={equips[type] && { value: equips[type].name, label: equips[type].name }}\n        onChange={itemId => onEquipChange(itemId, type)}\n      />\n      {styleType && <span>{'        '}str: {equips[type] && equips[type][strBonusField]} - att: {equips[type] && equips[type][attBonusField]}</span>}\n    </div>\n  );\n}\n\nexport default function ({ equips, setEquips, remove }) {\n  const availableAttackStyles = getAttackStylesFromWeapon(equips.weapon);\n\n  const onEquipChange = (selected, type) => {\n    let item = null;\n    if (selected) {\n      item = _.find(slotData[type], { name: selected.value });\n    }\n    const changeset = { ...equips, [type]: item };\n\n    if (type === 'weapon') {\n      if (item?.two_handed) {\n        changeset.shield = null;\n      }\n      if (equips.weapon?.attack_style_id !== item?.attack_style_id) {\n        changeset.attackStyle = null;\n      }\n    }\n    setEquips(changeset);\n  };\n\n  return (\n    <div>\n      <Button variant='danger' onClick={remove}>remove this card</Button>\n      {renderSlotSelector('weapon', equips, onEquipChange)}\n      <div className='equipment-row'>\n        <img src='/images/attack_styles.png' alt='attack style' />\n        <Select\n          isClearable\n          className=\"equipment-slot\"\n          placeholder={'Select attack style...'}\n          options={availableAttackStyles}\n          value={equips.attackStyle}\n          onChange={style => setEquips({ ...equips, attackStyle: style })}\n        />\n      </div>\n      {_.without(SLOT_NAMES, 'weapon').map(type => renderSlotSelector(type, equips, onEquipChange))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport slotData from './slot_data';\nimport monsterData from './data/monsters.json';\nimport _ from 'lodash';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Select from 'react-select';\nimport PlayerStats from './components/PlayerStats';\nimport ResultsPanel from './components/ResultsPanel';\nimport MonsterPanel from './components/MonsterPanel';\nimport GearSelector from './components/GearSelector';\nimport { useArrayState } from './lib/custom_hooks';\nimport { Button } from 'react-bootstrap';\n\nimport { SLOT_NAMES } from './lib/constants';\n\nconst DEFAULT_MONSTER = {\n    name: null,\n    location: null,\n    exp_bonus: null,\n    combat_level: 0,\n    hitpoints: 0,\n    attack_level: 0,\n    defence_level: 0,\n    strength_level: 0,\n    magic_level: 0,\n    ranged_level: 0,\n    attack_style: null,\n    attack_speed: 0,\n    stab_attack: 0,\n    slash_attack: 0,\n    crush_attack: 0,\n    magic_attack: 0,\n    ranged_attack: 0,\n    attack_bonus: 0,\n    melee_strength: 0,\n    ranged_strength: 0,\n    stab_def: 0,\n    slash_def: 0,\n    crush_def: 0,\n    magic_def: 0,\n    ranged_def: 0,\n    interval: null,\n    type: null\n};\n\nconst DEFAULT_STATS = {\n    attack: 99,\n    strength: 99,\n    defence: 99,\n    magic: 99,\n    ranged: 99,\n    hitpoints: 99,\n    prayer: 99,\n\n    attackPrayerId: null,\n    attackPotionId: null,\n    strengthPrayerId: null,\n    strengthPotionId: null,\n    rangedPrayerId: null,\n    rangedPotionId: null,\n};\n\nconst monsterOptions = parseJSONSelector(monsterData);\n\nfunction parseJSONSelector(slot){\n    var ret = [];\n    for(var i = 0 ; i < slot.length ; i++){\n        ret[i] = {value: slot[i].name, label: slot[i].name};\n    }\n    return ret;\n}\n\nconst DEFAULT_EQUIPS = _.reduce(SLOT_NAMES, (acc, key) => {\n    return {...acc, [key]: null};\n}, {});\n\nDEFAULT_EQUIPS.attackStyle = null;\n\nfunction App() {\n\n    const [equipSets, addEquipSet, removeEquipSet, editEquipSet] = useArrayState(DEFAULT_EQUIPS);\n    const [stats, setStats] = useState(DEFAULT_STATS);\n    const [monster, setMonster] = useState(DEFAULT_MONSTER);\n\n    const onMonsterChange = (monsterId) => {\n        let monster = DEFAULT_MONSTER;\n        if(monsterId) {\n            monster = _.find(monsterData, {name: monsterId.value});\n        }\n        setMonster(monster);\n    };\n\n    const onStatChange = (value, type) => {\n        setStats({...stats, [type]: value});\n    };\n\n    return (\n\n        <div className=\"App\">\n            <div className='row'>\n                <div className='col-md-6'>\n                    <Select\n                        isClearable\n                        placeholder='Select Enemy...'\n                        options={monsterOptions}\n                        value={monsterOptions && monsterOptions.name}\n                        onChange={monsterId => onMonsterChange(monsterId)}\n                    />\n                    <MonsterPanel monster={monster} />\n                </div>\n                <div className='col-md-6'>\n                    <PlayerStats stats={stats} onStatChange={onStatChange} />\n                    <div className=\"checkbox-wrapper\">\n                        <div className=\"\">\n                            <label className=\"checkbox-label\" htmlFor=\"wild\">Wilderness</label>\n                            <input className=\"checkbox\" type=\"checkbox\" id=\"wild\"></input>\n                        </div>\n                        <div className=\"\">\n                            <label className=\"checkbox-label\" htmlFor=\"kandarin\">Kandarin</label>\n                            <input className=\"checkbox\" type=\"checkbox\" id=\"kandarin\"></input>\n                        </div>\n                        <div className=\"\">\n                            <label className=\"checkbox-label\" htmlFor=\"dwh\">Dragon warhammer</label>\n                            <input className=\"checkbox\" type=\"checkbox\" id=\"dwh\"></input>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className='row'>\n                <Button onClick={addEquipSet}>Add gear card</Button>\n            </div>\n            <div className='row'>\n                {equipSets.map((equipSet, index) => (\n                    <div className='gear-card' key={index}>\n                        <GearSelector\n                            equips={equipSet}\n                            setEquips={equips => editEquipSet(index, equips)}\n                            remove={() => removeEquipSet(index)} />\n                        <ResultsPanel equips={equipSet} stats={stats} monster={monster} />\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { useState } from 'react';\n\nexport function useArrayState(defaultSingleValue) {\n    const [values, setValues] = useState([]);\n\n    const addValue = (value = defaultSingleValue) => setValues([...values, value]);\n\n    const removeValue = index => setValues(values.filter((_, i) => index !== i));\n\n    const editValue = (index, newValue) => {\n        values[index] = newValue;\n        setValues([...values]);\n    };\n\n    return [values, addValue, removeValue, editValue];\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}